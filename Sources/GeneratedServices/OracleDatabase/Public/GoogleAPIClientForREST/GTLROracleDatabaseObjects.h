// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Oracle Database@Google Cloud API (oracledatabase/v1)
// Description:
//   The Oracle Database@Google Cloud API provides a set of APIs to manage
//   Oracle database services, such as Exadata and Autonomous Databases.
// Documentation:
//   https://cloud.google.com/oracle/database/docs

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLROracleDatabase_AllConnectionStrings;
@class GTLROracleDatabase_AutonomousDatabase;
@class GTLROracleDatabase_AutonomousDatabase_Labels;
@class GTLROracleDatabase_AutonomousDatabaseApex;
@class GTLROracleDatabase_AutonomousDatabaseBackup;
@class GTLROracleDatabase_AutonomousDatabaseBackup_Labels;
@class GTLROracleDatabase_AutonomousDatabaseBackupProperties;
@class GTLROracleDatabase_AutonomousDatabaseCharacterSet;
@class GTLROracleDatabase_AutonomousDatabaseConnectionStrings;
@class GTLROracleDatabase_AutonomousDatabaseConnectionUrls;
@class GTLROracleDatabase_AutonomousDatabaseProperties;
@class GTLROracleDatabase_AutonomousDatabaseStandbySummary;
@class GTLROracleDatabase_AutonomousDbVersion;
@class GTLROracleDatabase_BackupDestinationDetails;
@class GTLROracleDatabase_CloudAccountDetails;
@class GTLROracleDatabase_CloudExadataInfrastructure;
@class GTLROracleDatabase_CloudExadataInfrastructure_Labels;
@class GTLROracleDatabase_CloudExadataInfrastructureProperties;
@class GTLROracleDatabase_CloudVmCluster;
@class GTLROracleDatabase_CloudVmCluster_Labels;
@class GTLROracleDatabase_CloudVmClusterProperties;
@class GTLROracleDatabase_CustomerContact;
@class GTLROracleDatabase_Database;
@class GTLROracleDatabase_DatabaseCharacterSet;
@class GTLROracleDatabase_DatabaseConnectionStringProfile;
@class GTLROracleDatabase_DatabaseManagementConfig;
@class GTLROracleDatabase_DatabaseProperties;
@class GTLROracleDatabase_DataCollectionOptions;
@class GTLROracleDatabase_DataCollectionOptionsCommon;
@class GTLROracleDatabase_DataCollectionOptionsDbSystem;
@class GTLROracleDatabase_DbBackupConfig;
@class GTLROracleDatabase_DbHome;
@class GTLROracleDatabase_DbNode;
@class GTLROracleDatabase_DbNodeProperties;
@class GTLROracleDatabase_DbServer;
@class GTLROracleDatabase_DbServerProperties;
@class GTLROracleDatabase_DbSystem;
@class GTLROracleDatabase_DbSystem_Labels;
@class GTLROracleDatabase_DbSystemInitialStorageSize;
@class GTLROracleDatabase_DbSystemInitialStorageSizeProperties;
@class GTLROracleDatabase_DbSystemOptions;
@class GTLROracleDatabase_DbSystemProperties;
@class GTLROracleDatabase_DbSystemShape;
@class GTLROracleDatabase_DbVersion;
@class GTLROracleDatabase_DbVersionProperties;
@class GTLROracleDatabase_DefinedTagValue;
@class GTLROracleDatabase_DefinedTagValue_Tags;
@class GTLROracleDatabase_EncryptionKey;
@class GTLROracleDatabase_EncryptionKeyHistoryEntry;
@class GTLROracleDatabase_Entitlement;
@class GTLROracleDatabase_ExadbVmCluster;
@class GTLROracleDatabase_ExadbVmCluster_Labels;
@class GTLROracleDatabase_ExadbVmClusterProperties;
@class GTLROracleDatabase_ExadbVmClusterStorageDetails;
@class GTLROracleDatabase_ExascaleDbStorageDetails;
@class GTLROracleDatabase_ExascaleDbStorageVault;
@class GTLROracleDatabase_ExascaleDbStorageVault_Labels;
@class GTLROracleDatabase_ExascaleDbStorageVaultProperties;
@class GTLROracleDatabase_GiVersion;
@class GTLROracleDatabase_IdentityConnector;
@class GTLROracleDatabase_Location;
@class GTLROracleDatabase_Location_Labels;
@class GTLROracleDatabase_Location_Metadata;
@class GTLROracleDatabase_MaintenanceWindow;
@class GTLROracleDatabase_MinorVersion;
@class GTLROracleDatabase_OdbNetwork;
@class GTLROracleDatabase_OdbNetwork_Labels;
@class GTLROracleDatabase_OdbSubnet;
@class GTLROracleDatabase_OdbSubnet_Labels;
@class GTLROracleDatabase_Operation;
@class GTLROracleDatabase_Operation_Metadata;
@class GTLROracleDatabase_Operation_Response;
@class GTLROracleDatabase_PluggableDatabase;
@class GTLROracleDatabase_PluggableDatabaseConnectionStrings;
@class GTLROracleDatabase_PluggableDatabaseConnectionStrings_AllConnectionStrings;
@class GTLROracleDatabase_PluggableDatabaseNodeLevelDetails;
@class GTLROracleDatabase_PluggableDatabaseProperties;
@class GTLROracleDatabase_PluggableDatabaseProperties_DefinedTags;
@class GTLROracleDatabase_PluggableDatabaseProperties_FreeformTags;
@class GTLROracleDatabase_ScheduledOperationDetails;
@class GTLROracleDatabase_SourceConfig;
@class GTLROracleDatabase_Status;
@class GTLROracleDatabase_Status_Details_Item;
@class GTLROracleDatabase_StorageSizeDetails;
@class GTLROracleDatabase_TimeOfDay;
@class GTLROracleDatabase_TimeZone;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseBackupProperties.lifecycleState

/**
 *  Indicates that the resource is in active state.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Active;
/**
 *  Indicates that the resource is in creating state.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Creating;
/**
 *  Indicates that the resource is in deleted state.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Deleted;
/**
 *  Indicates that the resource is in deleting state.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Deleting;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Failed;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_StateUnspecified;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseBackupProperties.type

/**
 *  Full backups.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_Full;
/**
 *  Incremental backups.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_Incremental;
/**
 *  Long term backups.
 *
 *  Value: "LONG_TERM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_LongTerm;
/**
 *  Default unspecified value.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseCharacterSet.characterSetType

/**
 *  Character set type is not specified.
 *
 *  Value: "CHARACTER_SET_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_CharacterSetTypeUnspecified;
/**
 *  Character set type is set to database.
 *
 *  Value: "DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_Database;
/**
 *  Character set type is set to national.
 *
 *  Value: "NATIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_National;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.databaseManagementState

/**
 *  Default unspecified value.
 *
 *  Value: "DATABASE_MANAGEMENT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_DatabaseManagementStateUnspecified;
/**
 *  Disabling Database Management state
 *
 *  Value: "DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Disabling;
/**
 *  Enabled Database Management state
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Enabled;
/**
 *  Enabling Database Management state
 *
 *  Value: "ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Enabling;
/**
 *  Failed disabling Database Management state
 *
 *  Value: "FAILED_DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_FailedDisabling;
/**
 *  Failed enabling Database Management state
 *
 *  Value: "FAILED_ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_FailedEnabling;
/**
 *  Not Enabled Database Management state
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_NotEnabled;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.dataSafeState

/**
 *  Default unspecified value.
 *
 *  Value: "DATA_SAFE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_DataSafeStateUnspecified;
/**
 *  Deregistering data safe state.
 *
 *  Value: "DEREGISTERING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Deregistering;
/**
 *  Failed data safe state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Failed;
/**
 *  Not registered data safe state.
 *
 *  Value: "NOT_REGISTERED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_NotRegistered;
/**
 *  Registered data safe state.
 *
 *  Value: "REGISTERED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Registered;
/**
 *  Registering data safe state.
 *
 *  Value: "REGISTERING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Registering;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.dbEdition

/**
 *  Default unspecified value.
 *
 *  Value: "DATABASE_EDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_DatabaseEditionUnspecified;
/**
 *  Enterprise Database Edition
 *
 *  Value: "ENTERPRISE_EDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_EnterpriseEdition;
/**
 *  Standard Database Edition
 *
 *  Value: "STANDARD_EDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_StandardEdition;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.dbWorkload

/**
 *  Autonomous JSON Database.
 *
 *  Value: "AJD"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Ajd;
/**
 *  Autonomous Database with the Oracle APEX Application Development workload
 *  type.
 *
 *  Value: "APEX"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Apex;
/**
 *  Default unspecified value.
 *
 *  Value: "DB_WORKLOAD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_DbWorkloadUnspecified;
/**
 *  Autonomous Data Warehouse database.
 *
 *  Value: "DW"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Dw;
/**
 *  Autonomous Transaction Processing database.
 *
 *  Value: "OLTP"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Oltp;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.licenseType

/**
 *  Bring your own license
 *
 *  Value: "BRING_YOUR_OWN_LICENSE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_BringYourOwnLicense;
/**
 *  License included part of offer
 *
 *  Value: "LICENSE_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_LicenseIncluded;
/**
 *  Unspecified
 *
 *  Value: "LICENSE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_LicenseTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.localDisasterRecoveryType

/**
 *  Autonomous Data Guard recovery.
 *
 *  Value: "ADG"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_Adg;
/**
 *  Backup based recovery.
 *
 *  Value: "BACKUP_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_BackupBased;
/**
 *  Default unspecified value.
 *
 *  Value: "LOCAL_DISASTER_RECOVERY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_LocalDisasterRecoveryTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.maintenanceScheduleType

/**
 *  An EARLY maintenance schedule patches the database before the regular
 *  scheduled maintenance.
 *
 *  Value: "EARLY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_Early;
/**
 *  Default unspecified value.
 *
 *  Value: "MAINTENANCE_SCHEDULE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_MaintenanceScheduleTypeUnspecified;
/**
 *  A REGULAR maintenance schedule follows the normal maintenance cycle.
 *
 *  Value: "REGULAR"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_Regular;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.openMode

/**
 *  Default unspecified value.
 *
 *  Value: "OPEN_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_OpenModeUnspecified;
/**
 *  Read Only Mode
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_ReadOnly;
/**
 *  Read Write Mode
 *
 *  Value: "READ_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_ReadWrite;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.operationsInsightsState

/**
 *  Disabling status for operation insights.
 *
 *  Value: "DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Disabling;
/**
 *  Enabled status for operation insights.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Enabled;
/**
 *  Enabling status for operation insights.
 *
 *  Value: "ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Enabling;
/**
 *  Failed disabling status for operation insights.
 *
 *  Value: "FAILED_DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_FailedDisabling;
/**
 *  Failed enabling status for operation insights.
 *
 *  Value: "FAILED_ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_FailedEnabling;
/**
 *  Not Enabled status for operation insights.
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_NotEnabled;
/**
 *  Default unspecified value.
 *
 *  Value: "OPERATIONS_INSIGHTS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_OperationsInsightsStateUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.permissionLevel

/**
 *  Default unspecified value.
 *
 *  Value: "PERMISSION_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_PermissionLevelUnspecified;
/**
 *  Restricted mode allows access only by admin users.
 *
 *  Value: "RESTRICTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_Restricted;
/**
 *  Normal access.
 *
 *  Value: "UNRESTRICTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_Unrestricted;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.refreshableMode

/**
 *  AUTOMATIC indicates that the cloned database is automatically refreshed with
 *  data from the source Autonomous Database.
 *
 *  Value: "AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_Automatic;
/**
 *  MANUAL indicates that the cloned database is manually refreshed with data
 *  from the source Autonomous Database.
 *
 *  Value: "MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_Manual;
/**
 *  The default unspecified value.
 *
 *  Value: "REFRESHABLE_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_RefreshableModeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.refreshableState

/**
 *  Not refreshed
 *
 *  Value: "NOT_REFRESHING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_NotRefreshing;
/**
 *  Default unspecified value.
 *
 *  Value: "REFRESHABLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_RefreshableStateUnspecified;
/**
 *  Refreshing
 *
 *  Value: "REFRESHING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_Refreshing;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.role

/**
 *  Backup copy role
 *
 *  Value: "BACKUP_COPY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_BackupCopy;
/**
 *  Disabled standby role
 *
 *  Value: "DISABLED_STANDBY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_DisabledStandby;
/**
 *  Primary role
 *
 *  Value: "PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_Primary;
/**
 *  Default unspecified value.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_RoleUnspecified;
/**
 *  Snapshot standby role
 *
 *  Value: "SNAPSHOT_STANDBY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_SnapshotStandby;
/**
 *  Standby role
 *
 *  Value: "STANDBY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_Role_Standby;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseProperties.state

/**
 *  Indicates that the Autonomous Database is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Available;
/**
 *  Indicates that the Autonomous Database is available but needs attention
 *  state.
 *
 *  Value: "AVAILABLE_NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_AvailableNeedsAttention;
/**
 *  Indicates that the Autonomous Database backup is in progress.
 *
 *  Value: "BACKUP_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_BackupInProgress;
/**
 *  Indicates that the Autonomous Database is in inaccessible state.
 *
 *  Value: "INACCESSIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Inaccessible;
/**
 *  Indicates that the Autonomous Database's maintenance is in progress state.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_MaintenanceInProgress;
/**
 *  Indicates that the Autonomous Database is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Provisioning;
/**
 *  Indicates that the Autonomous Database is in recreating state.
 *
 *  Value: "RECREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Recreating;
/**
 *  Indicates that the Autonomous Database is in restarting state.
 *
 *  Value: "RESTARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Restarting;
/**
 *  Indicates that the Autonomous Database failed to restore.
 *
 *  Value: "RESTORE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_RestoreFailed;
/**
 *  Indicates that the Autonomous Database restore is in progress.
 *
 *  Value: "RESTORE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_RestoreInProgress;
/**
 *  Indicates that the Autonomous Database's role change is in progress state.
 *
 *  Value: "ROLE_CHANGE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_RoleChangeInProgress;
/**
 *  Indicates that the Autonomous Database scale is in progress.
 *
 *  Value: "SCALE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_ScaleInProgress;
/**
 *  Indicates that the Autonomous Database is in standby state.
 *
 *  Value: "STANDBY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Standby;
/**
 *  Indicates that the Autonomous Database is in starting state.
 *
 *  Value: "STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Starting;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_StateUnspecified;
/**
 *  Indicates that the Autonomous Database is in stopped state.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Stopped;
/**
 *  Indicates that the Autonomous Database is in stopping state.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Stopping;
/**
 *  Indicates that the Autonomous Database is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Terminated;
/**
 *  Indicates that the Autonomous Database is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Terminating;
/**
 *  Indicates that the Autonomous Database is in unavailable state.
 *
 *  Value: "UNAVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Unavailable;
/**
 *  Indicates that the Autonomous Database is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Updating;
/**
 *  Indicates that the Autonomous Database is in upgrading state.
 *
 *  Value: "UPGRADING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseProperties_State_Upgrading;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDatabaseStandbySummary.state

/**
 *  Indicates that the Autonomous Database is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Available;
/**
 *  Indicates that the Autonomous Database is available but needs attention
 *  state.
 *
 *  Value: "AVAILABLE_NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_AvailableNeedsAttention;
/**
 *  Indicates that the Autonomous Database backup is in progress.
 *
 *  Value: "BACKUP_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_BackupInProgress;
/**
 *  Indicates that the Autonomous Database is in inaccessible state.
 *
 *  Value: "INACCESSIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Inaccessible;
/**
 *  Indicates that the Autonomous Database's maintenance is in progress state.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_MaintenanceInProgress;
/**
 *  Indicates that the Autonomous Database is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Provisioning;
/**
 *  Indicates that the Autonomous Database is in recreating state.
 *
 *  Value: "RECREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Recreating;
/**
 *  Indicates that the Autonomous Database is in restarting state.
 *
 *  Value: "RESTARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Restarting;
/**
 *  Indicates that the Autonomous Database failed to restore.
 *
 *  Value: "RESTORE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RestoreFailed;
/**
 *  Indicates that the Autonomous Database restore is in progress.
 *
 *  Value: "RESTORE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RestoreInProgress;
/**
 *  Indicates that the Autonomous Database's role change is in progress state.
 *
 *  Value: "ROLE_CHANGE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RoleChangeInProgress;
/**
 *  Indicates that the Autonomous Database scale is in progress.
 *
 *  Value: "SCALE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_ScaleInProgress;
/**
 *  Indicates that the Autonomous Database is in standby state.
 *
 *  Value: "STANDBY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Standby;
/**
 *  Indicates that the Autonomous Database is in starting state.
 *
 *  Value: "STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Starting;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_StateUnspecified;
/**
 *  Indicates that the Autonomous Database is in stopped state.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Stopped;
/**
 *  Indicates that the Autonomous Database is in stopping state.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Stopping;
/**
 *  Indicates that the Autonomous Database is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Terminated;
/**
 *  Indicates that the Autonomous Database is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Terminating;
/**
 *  Indicates that the Autonomous Database is in unavailable state.
 *
 *  Value: "UNAVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Unavailable;
/**
 *  Indicates that the Autonomous Database is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Updating;
/**
 *  Indicates that the Autonomous Database is in upgrading state.
 *
 *  Value: "UPGRADING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Upgrading;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_AutonomousDbVersion.dbWorkload

/**
 *  Autonomous JSON Database.
 *
 *  Value: "AJD"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Ajd;
/**
 *  Autonomous Database with the Oracle APEX Application Development workload
 *  type.
 *
 *  Value: "APEX"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Apex;
/**
 *  Default unspecified value.
 *
 *  Value: "DB_WORKLOAD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_DbWorkloadUnspecified;
/**
 *  Autonomous Data Warehouse database.
 *
 *  Value: "DW"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Dw;
/**
 *  Autonomous Transaction Processing database.
 *
 *  Value: "OLTP"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Oltp;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_BackupDestinationDetails.type

/**
 *  Default unspecified value.
 *
 *  Value: "BACKUP_DESTINATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_BackupDestinationTypeUnspecified;
/**
 *  Backup destination type is DBRS.
 *
 *  Value: "DBRS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_Dbrs;
/**
 *  Backup destination type is Local.
 *
 *  Value: "LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_Local;
/**
 *  Backup destination type is NFS.
 *
 *  Value: "NFS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_Nfs;
/**
 *  Backup destination type is Object Store.
 *
 *  Value: "OBJECT_STORE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_ObjectStore;
/**
 *  Backup destination type is Recovery Appliance.
 *
 *  Value: "RECOVERY_APPLIANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_BackupDestinationDetails_Type_RecoveryAppliance;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudExadataInfrastructureProperties.computeModel

/**
 *  Abstract measure of compute resources. ECPUs are based on the number of
 *  cores elastically allocated from a pool of compute and storage servers.
 *
 *  Value: "COMPUTE_MODEL_ECPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelEcpu;
/**
 *  Physical measure of compute resources. OCPUs are based on the physical core
 *  of a processor.
 *
 *  Value: "COMPUTE_MODEL_OCPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelOcpu;
/**
 *  Unspecified compute model.
 *
 *  Value: "COMPUTE_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudExadataInfrastructureProperties.state

/**
 *  The Exadata Infrastructure is available for use.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Available;
/**
 *  The Exadata Infrastructure is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Failed;
/**
 *  The Exadata Infrastructure is in maintenance.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_MaintenanceInProgress;
/**
 *  The Exadata Infrastructure is being provisioned.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Provisioning;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_StateUnspecified;
/**
 *  The Exadata Infrastructure is terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Terminated;
/**
 *  The Exadata Infrastructure is being terminated.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Terminating;
/**
 *  The Exadata Infrastructure is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudVmClusterProperties.computeModel

/**
 *  Abstract measure of compute resources. ECPUs are based on the number of
 *  cores elastically allocated from a pool of compute and storage servers.
 *
 *  Value: "COMPUTE_MODEL_ECPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelEcpu;
/**
 *  Physical measure of compute resources. OCPUs are based on the physical core
 *  of a processor.
 *
 *  Value: "COMPUTE_MODEL_OCPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelOcpu;
/**
 *  Unspecified compute model.
 *
 *  Value: "COMPUTE_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudVmClusterProperties.diskRedundancy

/**
 *  Unspecified.
 *
 *  Value: "DISK_REDUNDANCY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_DiskRedundancyUnspecified;
/**
 *  High - 3 way mirror.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_High;
/**
 *  Normal - 2 way mirror.
 *
 *  Value: "NORMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_Normal;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudVmClusterProperties.licenseType

/**
 *  Bring your own license
 *
 *  Value: "BRING_YOUR_OWN_LICENSE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_BringYourOwnLicense;
/**
 *  License included part of offer
 *
 *  Value: "LICENSE_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_LicenseIncluded;
/**
 *  Unspecified
 *
 *  Value: "LICENSE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_LicenseTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_CloudVmClusterProperties.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Available;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Failed;
/**
 *  Indicates that the resource is in maintenance in progress state.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_MaintenanceInProgress;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Provisioning;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_StateUnspecified;
/**
 *  Indicates that the resource is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Terminated;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Terminating;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_CloudVmClusterProperties_State_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_Database.opsInsightsStatus

/**
 *  Indicates that the operations insights are being disabled.
 *
 *  Value: "DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_Disabling;
/**
 *  Indicates that the operations insights are enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_Enabled;
/**
 *  Indicates that the operations insights are being enabled.
 *
 *  Value: "ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_Enabling;
/**
 *  Indicates that the operations insights failed to disable.
 *
 *  Value: "FAILED_DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_FailedDisabling;
/**
 *  Indicates that the operations insights failed to enable.
 *
 *  Value: "FAILED_ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_FailedEnabling;
/**
 *  Indicates that the operations insights are not enabled.
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_NotEnabled;
/**
 *  Default unspecified value.
 *
 *  Value: "OPERATIONS_INSIGHTS_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Database_OpsInsightsStatus_OperationsInsightsStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseCharacterSet.characterSetType

/**
 *  Character set type is not specified.
 *
 *  Value: "CHARACTER_SET_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_CharacterSetTypeUnspecified;
/**
 *  Character set type is set to database.
 *
 *  Value: "DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_Database;
/**
 *  Character set type is set to national.
 *
 *  Value: "NATIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_National;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.consumerGroup

/**
 *  Default unspecified value.
 *
 *  Value: "CONSUMER_GROUP_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_ConsumerGroupUnspecified;
/**
 *  High consumer group.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_High;
/**
 *  Low consumer group.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Low;
/**
 *  Medium consumer group.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Medium;
/**
 *  TP consumer group.
 *
 *  Value: "TP"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Tp;
/**
 *  TPURGENT consumer group.
 *
 *  Value: "TPURGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Tpurgent;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.hostFormat

/**
 *  FQDN
 *
 *  Value: "FQDN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_Fqdn;
/**
 *  Default unspecified value.
 *
 *  Value: "HOST_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_HostFormatUnspecified;
/**
 *  IP
 *
 *  Value: "IP"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_Ip;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.protocol

/**
 *  Default unspecified value.
 *
 *  Value: "PROTOCOL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_ProtocolUnspecified;
/**
 *  Tcp
 *
 *  Value: "TCP"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_Tcp;
/**
 *  Tcps
 *
 *  Value: "TCPS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_Tcps;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.sessionMode

/**
 *  Direct
 *
 *  Value: "DIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_Direct;
/**
 *  Indirect
 *
 *  Value: "INDIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_Indirect;
/**
 *  Default unspecified value.
 *
 *  Value: "SESSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_SessionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.syntaxFormat

/**
 *  Ezconnect
 *
 *  Value: "EZCONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Ezconnect;
/**
 *  Ezconnectplus
 *
 *  Value: "EZCONNECTPLUS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Ezconnectplus;
/**
 *  Long
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Long;
/**
 *  Default unspecified value.
 *
 *  Value: "SYNTAX_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_SyntaxFormatUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseConnectionStringProfile.tlsAuthentication

/**
 *  Mutual
 *
 *  Value: "MUTUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_Mutual;
/**
 *  Server
 *
 *  Value: "SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_Server;
/**
 *  Default unspecified value.
 *
 *  Value: "TLS_AUTHENTICATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_TlsAuthenticationUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseManagementConfig.managementState

/**
 *  The Database Management service is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Disabled;
/**
 *  The Database Management service is disabling.
 *
 *  Value: "DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Disabling;
/**
 *  The Database Management service is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Enabled;
/**
 *  The Database Management service is enabling.
 *
 *  Value: "ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Enabling;
/**
 *  The Database Management service failed to disable.
 *
 *  Value: "FAILED_DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedDisabling;
/**
 *  The Database Management service failed to enable.
 *
 *  Value: "FAILED_ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedEnabling;
/**
 *  The Database Management service failed to update.
 *
 *  Value: "FAILED_UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedUpdating;
/**
 *  The status is not specified.
 *
 *  Value: "MANAGEMENT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_ManagementStateUnspecified;
/**
 *  The Database Management service is updating.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseManagementConfig.managementType

/**
 *  Advanced Database Management.
 *
 *  Value: "ADVANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_Advanced;
/**
 *  Basic Database Management.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_Basic;
/**
 *  The type is not specified.
 *
 *  Value: "MANAGEMENT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_ManagementTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DatabaseProperties.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Available;
/**
 *  Indicates that the resource is in backup in progress state.
 *
 *  Value: "BACKUP_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_BackupInProgress;
/**
 *  Indicates that the resource is in converting state.
 *
 *  Value: "CONVERTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Converting;
/**
 *  Default unspecified value.
 *
 *  Value: "DATABASE_LIFECYCLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_DatabaseLifecycleStateUnspecified;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Failed;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Provisioning;
/**
 *  Indicates that the resource is in restore failed state.
 *
 *  Value: "RESTORE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_RestoreFailed;
/**
 *  Indicates that the resource is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Terminated;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Terminating;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Updating;
/**
 *  Indicates that the resource is in upgrading state.
 *
 *  Value: "UPGRADING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DatabaseProperties_State_Upgrading;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbBackupConfig.autoFullBackupDay

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Wednesday;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbBackupConfig.autoFullBackupWindow

/**
 *  Default unspecified value.
 *
 *  Value: "BACKUP_WINDOW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_BackupWindowUnspecified;
/**
 *  2:00 PM - 4:00 PM
 *
 *  Value: "SLOT_EIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotEight;
/**
 *  8:00 PM - 10:00 PM
 *
 *  Value: "SLOT_ELEVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotEleven;
/**
 *  8:00 AM - 10:00 AM
 *
 *  Value: "SLOT_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotFive;
/**
 *  6:00 AM - 8:00 AM
 *
 *  Value: "SLOT_FOUR"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotFour;
/**
 *  4:00 PM - 6:00 PM
 *
 *  Value: "SLOT_NINE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotNine;
/**
 *  12:00 AM - 2:00 AM
 *
 *  Value: "SLOT_ONE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotOne;
/**
 *  12:00 PM - 2:00 PM
 *
 *  Value: "SLOT_SEVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotSeven;
/**
 *  10:00 AM - 12:00 PM
 *
 *  Value: "SLOT_SIX"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotSix;
/**
 *  6:00 PM - 8:00 PM
 *
 *  Value: "SLOT_TEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTen;
/**
 *  4:00 AM - 6:00 AM
 *
 *  Value: "SLOT_THREE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotThree;
/**
 *  10:00 PM - 12:00 AM
 *
 *  Value: "SLOT_TWELVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTwelve;
/**
 *  2:00 AM - 4:00 AM
 *
 *  Value: "SLOT_TWO"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTwo;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbBackupConfig.autoIncrementalBackupWindow

/**
 *  Default unspecified value.
 *
 *  Value: "BACKUP_WINDOW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_BackupWindowUnspecified;
/**
 *  2:00 PM - 4:00 PM
 *
 *  Value: "SLOT_EIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotEight;
/**
 *  8:00 PM - 10:00 PM
 *
 *  Value: "SLOT_ELEVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotEleven;
/**
 *  8:00 AM - 10:00 AM
 *
 *  Value: "SLOT_FIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotFive;
/**
 *  6:00 AM - 8:00 AM
 *
 *  Value: "SLOT_FOUR"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotFour;
/**
 *  4:00 PM - 6:00 PM
 *
 *  Value: "SLOT_NINE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotNine;
/**
 *  12:00 AM - 2:00 AM
 *
 *  Value: "SLOT_ONE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotOne;
/**
 *  12:00 PM - 2:00 PM
 *
 *  Value: "SLOT_SEVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotSeven;
/**
 *  10:00 AM - 12:00 PM
 *
 *  Value: "SLOT_SIX"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotSix;
/**
 *  6:00 PM - 8:00 PM
 *
 *  Value: "SLOT_TEN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTen;
/**
 *  4:00 AM - 6:00 AM
 *
 *  Value: "SLOT_THREE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotThree;
/**
 *  10:00 PM - 12:00 AM
 *
 *  Value: "SLOT_TWELVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTwelve;
/**
 *  2:00 AM - 4:00 AM
 *
 *  Value: "SLOT_TWO"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTwo;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbBackupConfig.backupDeletionPolicy

/**
 *  Default unspecified value.
 *
 *  Value: "BACKUP_DELETION_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_BackupDeletionPolicyUnspecified;
/**
 *  Keeps the backups as per the policy defined for database backups.
 *
 *  Value: "DELETE_AFTER_RETENTION_PERIOD"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_DeleteAfterRetentionPeriod;
/**
 *  Keeps the backup for predefined time i.e. 72 hours and then delete
 *  permanently.
 *
 *  Value: "DELETE_IMMEDIATELY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_DeleteImmediately;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbNodeProperties.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Available;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Failed;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Provisioning;
/**
 *  Indicates that the resource is in starting state.
 *
 *  Value: "STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Starting;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_StateUnspecified;
/**
 *  Indicates that the resource is in stopped state.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Stopped;
/**
 *  Indicates that the resource is in stopping state.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Stopping;
/**
 *  Indicates that the resource is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Terminated;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Terminating;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbNodeProperties_State_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbServerProperties.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_Available;
/**
 *  Indicates that the resource is in creating state.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_Creating;
/**
 *  Indicates that the resource is in deleted state.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_Deleted;
/**
 *  Indicates that the resource is in deleting state.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_Deleting;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_StateUnspecified;
/**
 *  Indicates that the resource is in unavailable state.
 *
 *  Value: "UNAVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbServerProperties_State_Unavailable;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemInitialStorageSizeProperties.shapeType

/**
 *  Unspecified shape type.
 *
 *  Value: "SHAPE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_ShapeType_ShapeTypeUnspecified;
/**
 *  Standard X86.
 *
 *  Value: "STANDARD_X86"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_ShapeType_StandardX86;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemInitialStorageSizeProperties.storageManagement

/**
 *  Automatic Storage Management.
 *
 *  Value: "ASM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_Asm;
/**
 *  Logical Volume Management.
 *
 *  Value: "LVM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_Lvm;
/**
 *  Unspecified storage management.
 *
 *  Value: "STORAGE_MANAGEMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_StorageManagementUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemOptions.storageManagement

/**
 *  Automatic storage management.
 *
 *  Value: "ASM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemOptions_StorageManagement_Asm;
/**
 *  Logical Volume management.
 *
 *  Value: "LVM"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemOptions_StorageManagement_Lvm;
/**
 *  The storage management is unspecified.
 *
 *  Value: "STORAGE_MANAGEMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemOptions_StorageManagement_StorageManagementUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemProperties.computeModel

/**
 *  The compute model is unspecified.
 *
 *  Value: "COMPUTE_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_ComputeModel_ComputeModelUnspecified;
/**
 *  The compute model is virtual.
 *
 *  Value: "ECPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_ComputeModel_Ecpu;
/**
 *  The compute model is physical.
 *
 *  Value: "OCPU"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_ComputeModel_Ocpu;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemProperties.databaseEdition

/**
 *  The database edition is unspecified.
 *
 *  Value: "DB_SYSTEM_DATABASE_EDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_DbSystemDatabaseEditionUnspecified;
/**
 *  The database edition is Enterprise.
 *
 *  Value: "ENTERPRISE_EDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_EnterpriseEdition;
/**
 *  The database edition is Enterprise Edition.
 *
 *  Value: "ENTERPRISE_EDITION_HIGH_PERFORMANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_EnterpriseEditionHighPerformance;
/**
 *  The database edition is Standard.
 *
 *  Value: "STANDARD_EDITION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_StandardEdition;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemProperties.licenseModel

/**
 *  The license model is bring your own license.
 *
 *  Value: "BRING_YOUR_OWN_LICENSE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LicenseModel_BringYourOwnLicense;
/**
 *  The license model is included.
 *
 *  Value: "LICENSE_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LicenseModel_LicenseIncluded;
/**
 *  The license model is unspecified.
 *
 *  Value: "LICENSE_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LicenseModel_LicenseModelUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_DbSystemProperties.lifecycleState

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Available;
/**
 *  Default unspecified value.
 *
 *  Value: "DB_SYSTEM_LIFECYCLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_DbSystemLifecycleStateUnspecified;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Failed;
/**
 *  Indicates that the resource is in maintenance in progress state.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_MaintenanceInProgress;
/**
 *  Indicates that the resource has been migrated.
 *
 *  Value: "MIGRATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Migrated;
/**
 *  Indicates that the resource needs attention.
 *
 *  Value: "NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_NeedsAttention;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Provisioning;
/**
 *  Indicates that the resource is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Terminated;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Terminating;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Updating;
/**
 *  Indicates that the resource is upgrading.
 *
 *  Value: "UPGRADING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_DbSystemProperties_LifecycleState_Upgrading;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_EncryptionKey.provider

/**
 *  Google Managed KMS key, if selected, please provide the KMS key name.
 *
 *  Value: "GOOGLE_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_EncryptionKey_Provider_GoogleManaged;
/**
 *  Oracle Managed.
 *
 *  Value: "ORACLE_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_EncryptionKey_Provider_OracleManaged;
/**
 *  Default unspecified value.
 *
 *  Value: "PROVIDER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_EncryptionKey_Provider_ProviderUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_Entitlement.state

/**
 *  Account is linked but not active.
 *
 *  Value: "ACCOUNT_NOT_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_AccountNotActive;
/**
 *  Account not linked.
 *
 *  Value: "ACCOUNT_NOT_LINKED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_AccountNotLinked;
/**
 *  Account is suspended.
 *
 *  Value: "ACCOUNT_SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_AccountSuspended;
/**
 *  Entitlement and Account are active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_Active;
/**
 *  Entitlement is not approved in private marketplace.
 *
 *  Value: "NOT_APPROVED_IN_PRIVATE_MARKETPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_NotApprovedInPrivateMarketplace;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_Entitlement_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExadbVmClusterProperties.licenseModel

/**
 *  Bring your own license.
 *
 *  Value: "BRING_YOUR_OWN_LICENSE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_BringYourOwnLicense;
/**
 *  Default is license included.
 *
 *  Value: "LICENSE_INCLUDED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_LicenseIncluded;
/**
 *  Unspecified.
 *
 *  Value: "LICENSE_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_LicenseModelUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExadbVmClusterProperties.lifecycleState

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Available;
/**
 *  Default unspecified value.
 *
 *  Value: "EXADB_VM_CLUSTER_LIFECYCLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_ExadbVmClusterLifecycleStateUnspecified;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Failed;
/**
 *  Indicates that the resource is in maintenance in progress state.
 *
 *  Value: "MAINTENANCE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_MaintenanceInProgress;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Provisioning;
/**
 *  Indicates that the resource is in terminated state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Terminated;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Terminating;
/**
 *  Indicates that the resource is in updating state.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExadbVmClusterProperties.shapeAttribute

/**
 *  Indicates that the resource is in block storage.
 *
 *  Value: "BLOCK_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_BlockStorage;
/**
 *  Default unspecified value.
 *
 *  Value: "SHAPE_ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_ShapeAttributeUnspecified;
/**
 *  Indicates that the resource is in smart storage.
 *
 *  Value: "SMART_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_SmartStorage;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExascaleDbStorageVaultProperties.attachedShapeAttributes

/**
 *  Indicates that the resource is in block storage.
 *
 *  Value: "BLOCK_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AttachedShapeAttributes_BlockStorage;
/**
 *  Default unspecified value.
 *
 *  Value: "SHAPE_ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AttachedShapeAttributes_ShapeAttributeUnspecified;
/**
 *  Indicates that the resource is in smart storage.
 *
 *  Value: "SMART_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AttachedShapeAttributes_SmartStorage;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExascaleDbStorageVaultProperties.availableShapeAttributes

/**
 *  Indicates that the resource is in block storage.
 *
 *  Value: "BLOCK_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AvailableShapeAttributes_BlockStorage;
/**
 *  Default unspecified value.
 *
 *  Value: "SHAPE_ATTRIBUTE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AvailableShapeAttributes_ShapeAttributeUnspecified;
/**
 *  Indicates that the resource is in smart storage.
 *
 *  Value: "SMART_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_AvailableShapeAttributes_SmartStorage;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ExascaleDbStorageVaultProperties.state

/**
 *  The ExascaleDbStorageVault is available.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Available;
/**
 *  The ExascaleDbStorageVault has failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Failed;
/**
 *  The ExascaleDbStorageVault is being provisioned.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Provisioning;
/**
 *  The state of the ExascaleDbStorageVault is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_StateUnspecified;
/**
 *  The ExascaleDbStorageVault has been deleted.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Terminated;
/**
 *  The ExascaleDbStorageVault is being deleted.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Terminating;
/**
 *  The ExascaleDbStorageVault is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest.type

/**
 *  Used to generate wallet for all databases in the region.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_All;
/**
 *  Default unspecified value.
 *
 *  Value: "GENERATE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_GenerateTypeUnspecified;
/**
 *  Used to generate wallet for a single database.
 *
 *  Value: "SINGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_Single;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_IdentityConnector.connectionState

/**
 *  The identity pool connection is connected.
 *
 *  Value: "CONNECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_IdentityConnector_ConnectionState_Connected;
/**
 *  Default unspecified value.
 *
 *  Value: "CONNECTION_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_IdentityConnector_ConnectionState_ConnectionStateUnspecified;
/**
 *  The identity pool connection is disconnected.
 *
 *  Value: "DISCONNECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_IdentityConnector_ConnectionState_Disconnected;
/**
 *  The identity pool connection is partially connected.
 *
 *  Value: "PARTIALLY_CONNECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_IdentityConnector_ConnectionState_PartiallyConnected;
/**
 *  The identity pool connection is in an unknown state.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_IdentityConnector_ConnectionState_Unknown;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_MaintenanceWindow.daysOfWeek

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_DaysOfWeek_Wednesday;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_MaintenanceWindow.months

/**
 *  The month of April.
 *
 *  Value: "APRIL"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_April;
/**
 *  The month of August.
 *
 *  Value: "AUGUST"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_August;
/**
 *  The month of December.
 *
 *  Value: "DECEMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_December;
/**
 *  The month of February.
 *
 *  Value: "FEBRUARY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_February;
/**
 *  The month of January.
 *
 *  Value: "JANUARY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_January;
/**
 *  The month of July.
 *
 *  Value: "JULY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_July;
/**
 *  The month of June.
 *
 *  Value: "JUNE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_June;
/**
 *  The month of March.
 *
 *  Value: "MARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_March;
/**
 *  The month of May.
 *
 *  Value: "MAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_May;
/**
 *  The unspecified month.
 *
 *  Value: "MONTH_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_MonthUnspecified;
/**
 *  The month of November.
 *
 *  Value: "NOVEMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_November;
/**
 *  The month of October.
 *
 *  Value: "OCTOBER"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_October;
/**
 *  The month of September.
 *
 *  Value: "SEPTEMBER"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Months_September;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_MaintenanceWindow.patchingMode

/**
 *  The non-rolling maintenance method first updates your storage servers at the
 *  same time, then your database servers at the same time.
 *
 *  Value: "NON_ROLLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_PatchingMode_NonRolling;
/**
 *  Default unspecified value.
 *
 *  Value: "PATCHING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_PatchingMode_PatchingModeUnspecified;
/**
 *  Updates the Cloud Exadata database server hosts in a rolling fashion.
 *
 *  Value: "ROLLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_PatchingMode_Rolling;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_MaintenanceWindow.preference

/**
 *  Custom preference.
 *
 *  Value: "CUSTOM_PREFERENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Preference_CustomPreference;
/**
 *  Default unspecified value.
 *
 *  Value: "MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Preference_MaintenanceWindowPreferenceUnspecified;
/**
 *  No preference.
 *
 *  Value: "NO_PREFERENCE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_MaintenanceWindow_Preference_NoPreference;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_OdbNetwork.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbNetwork_State_Available;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbNetwork_State_Failed;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbNetwork_State_Provisioning;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbNetwork_State_StateUnspecified;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbNetwork_State_Terminating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_OdbSubnet.purpose

/**
 *  Subnet to be used for backup.
 *
 *  Value: "BACKUP_SUBNET"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_Purpose_BackupSubnet;
/**
 *  Subnet to be used for client connections.
 *
 *  Value: "CLIENT_SUBNET"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_Purpose_ClientSubnet;
/**
 *  Default unspecified value.
 *
 *  Value: "PURPOSE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_Purpose_PurposeUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_OdbSubnet.state

/**
 *  Indicates that the resource is in available state.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_State_Available;
/**
 *  Indicates that the resource is in failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_State_Failed;
/**
 *  Indicates that the resource is in provisioning state.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_State_Provisioning;
/**
 *  Default unspecified value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_State_StateUnspecified;
/**
 *  Indicates that the resource is in terminating state.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_OdbSubnet_State_Terminating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_PluggableDatabaseNodeLevelDetails.openMode

/**
 *  The pluggable database is migrated.
 *
 *  Value: "MIGRATE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_Migrate;
/**
 *  The pluggable database is mounted.
 *
 *  Value: "MOUNTED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_Mounted;
/**
 *  The open mode is unspecified.
 *
 *  Value: "PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_PluggableDatabaseOpenModeUnspecified;
/**
 *  The pluggable database is opened in read-only mode.
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_ReadOnly;
/**
 *  The pluggable database is opened in read-write mode.
 *
 *  Value: "READ_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_ReadWrite;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_PluggableDatabaseProperties.lifecycleState

/**
 *  The pluggable database is available.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Available;
/**
 *  The pluggable database is backing up.
 *
 *  Value: "BACKUP_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_BackupInProgress;
/**
 *  The pluggable database is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Disabled;
/**
 *  The pluggable database is in a failed state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Failed;
/**
 *  The lifecycle state is unspecified.
 *
 *  Value: "PLUGGABLE_DATABASE_LIFECYCLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_PluggableDatabaseLifecycleStateUnspecified;
/**
 *  The pluggable database is provisioning.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Provisioning;
/**
 *  The pluggable database is refreshing.
 *
 *  Value: "REFRESHING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Refreshing;
/**
 *  The pluggable database is relocated.
 *
 *  Value: "RELOCATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Relocated;
/**
 *  The pluggable database is relocating.
 *
 *  Value: "RELOCATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Relocating;
/**
 *  The pluggable database restore failed.
 *
 *  Value: "RESTORE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_RestoreFailed;
/**
 *  The pluggable database is restoring.
 *
 *  Value: "RESTORE_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_RestoreInProgress;
/**
 *  The pluggable database is terminated.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Terminated;
/**
 *  The pluggable database is terminating.
 *
 *  Value: "TERMINATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Terminating;
/**
 *  The pluggable database is updating.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Updating;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_PluggableDatabaseProperties.operationsInsightsState

/**
 *  Operations Insights is disabling.
 *
 *  Value: "DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Disabling;
/**
 *  Operations Insights is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Enabled;
/**
 *  Operations Insights is enabling.
 *
 *  Value: "ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Enabling;
/**
 *  Operations Insights failed to disable.
 *
 *  Value: "FAILED_DISABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_FailedDisabling;
/**
 *  Operations Insights failed to enable.
 *
 *  Value: "FAILED_ENABLING"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_FailedEnabling;
/**
 *  Operations Insights is not enabled.
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_NotEnabled;
/**
 *  The status is not specified.
 *
 *  Value: "OPERATIONS_INSIGHTS_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_OperationsInsightsStateUnspecified;

// ----------------------------------------------------------------------------
// GTLROracleDatabase_ScheduledOperationDetails.dayOfWeek

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Wednesday;

/**
 *  A list of all connection strings that can be used to connect to the
 *  Autonomous Database.
 */
@interface GTLROracleDatabase_AllConnectionStrings : GTLRObject

/**
 *  Output only. The database service provides the highest level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *high;

/**
 *  Output only. The database service provides the least level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *low;

/**
 *  Output only. The database service provides a lower level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *medium;

@end


/**
 *  Details of the Autonomous Database resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabase/
 */
@interface GTLROracleDatabase_AutonomousDatabase : GTLRObject

/** Optional. The password for the default ADMIN user. */
@property(nonatomic, copy, nullable) NSString *adminPassword;

/** Optional. The subnet CIDR range for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *cidr;

/**
 *  Output only. The date and time that the Autonomous Database was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The name of the Autonomous Database. The database name must be
 *  unique in the project. The name must begin with a letter and can contain a
 *  maximum of 30 alphanumeric characters.
 */
@property(nonatomic, copy, nullable) NSString *database;

/**
 *  Output only. List of supported GCP region to clone the Autonomous Database
 *  for disaster recovery. Format: `project/{project}/locations/{location}`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *disasterRecoverySupportedLocations;

/**
 *  Optional. The display name for the Autonomous Database. The name does not
 *  have to be unique within your project.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The ID of the subscription entitlement associated with the
 *  Autonomous Database.
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/** Optional. The labels or tags associated with the Autonomous Database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabase_Labels *labels;

/**
 *  Identifier. The name of the Autonomous Database resource in the following
 *  format:
 *  projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The name of the VPC network used by the Autonomous Database in the
 *  following format: projects/{project}/global/networks/{network}
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Optional. The name of the OdbNetwork associated with the Autonomous
 *  Database. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network} It is
 *  optional but if specified, this should match the parent ODBNetwork of the
 *  OdbSubnet.
 */
@property(nonatomic, copy, nullable) NSString *odbNetwork;

/**
 *  Optional. The name of the OdbSubnet associated with the Autonomous Database.
 *  Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *odbSubnet;

/**
 *  Output only. The peer Autonomous Database names of the given Autonomous
 *  Database.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *peerAutonomousDatabases;

/** Optional. The properties of the Autonomous Database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseProperties *properties;

/**
 *  Optional. The source Autonomous Database configuration for the standby
 *  Autonomous Database. The source Autonomous Database is configured while
 *  creating the Peer Autonomous Database and can't be updated after creation.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_SourceConfig *sourceConfig;

@end


/**
 *  Optional. The labels or tags associated with the Autonomous Database.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_AutonomousDatabase_Labels : GTLRObject
@end


/**
 *  Oracle APEX Application Development.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseApex
 */
@interface GTLROracleDatabase_AutonomousDatabaseApex : GTLRObject

/** Output only. The Oracle APEX Application Development version. */
@property(nonatomic, copy, nullable) NSString *apexVersion;

/** Output only. The Oracle REST Data Services (ORDS) version. */
@property(nonatomic, copy, nullable) NSString *ordsVersion;

@end


/**
 *  Details of the Autonomous Database Backup resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseBackup/
 */
@interface GTLROracleDatabase_AutonomousDatabaseBackup : GTLRObject

/**
 *  Required. The name of the Autonomous Database resource for which the backup
 *  is being created. Format:
 *  projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
 */
@property(nonatomic, copy, nullable) NSString *autonomousDatabase;

/**
 *  Optional. User friendly name for the Backup. The name does not have to be
 *  unique.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Optional. labels or tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseBackup_Labels *labels;

/**
 *  Identifier. The name of the Autonomous Database Backup resource with the
 *  format:
 *  projects/{project}/locations/{region}/autonomousDatabaseBackups/{autonomous_database_backup}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Various properties of the backup. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseBackupProperties *properties;

@end


/**
 *  Optional. labels or tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_AutonomousDatabaseBackup_Labels : GTLRObject
@end


/**
 *  Properties of the Autonomous Database Backup resource.
 */
@interface GTLROracleDatabase_AutonomousDatabaseBackupProperties : GTLRObject

/** Output only. Timestamp until when the backup will be available. */
@property(nonatomic, strong, nullable) GTLRDateTime *availableTillTime;

/** Output only. The OCID of the compartment. */
@property(nonatomic, copy, nullable) NSString *compartmentId;

/**
 *  Output only. The quantity of data in the database, in terabytes.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *databaseSizeTb;

/** Output only. A valid Oracle Database version for Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *dbVersion;

/** Output only. The date and time the backup completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Indicates if the backup is automatic or user initiated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAutomaticBackup;

/**
 *  Output only. Indicates if the backup is long term backup.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isLongTermBackup;

/**
 *  Output only. Indicates if the backup can be used to restore the Autonomous
 *  Database.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRestorable;

/** Optional. The OCID of the key store of Oracle Vault. */
@property(nonatomic, copy, nullable) NSString *keyStoreId;

/** Optional. The wallet name for Oracle Key Vault. */
@property(nonatomic, copy, nullable) NSString *keyStoreWallet;

/**
 *  Optional. The OCID of the key container that is used as the master
 *  encryption key in database transparent data encryption (TDE) operations.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyId;

/**
 *  Optional. The OCID of the key container version that is used in database
 *  transparent data encryption (TDE) operations KMS Key can have multiple key
 *  versions. If none is specified, the current key version (latest) of the Key
 *  Id is used for the operation. Autonomous Database Serverless does not use
 *  key versions, hence is not applicable for Autonomous Database Serverless
 *  instances.
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyVersionId;

/** Output only. Additional information about the current lifecycle state. */
@property(nonatomic, copy, nullable) NSString *lifecycleDetails;

/**
 *  Output only. The lifecycle state of the backup.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Active
 *        Indicates that the resource is in active state. (Value: "ACTIVE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Creating
 *        Indicates that the resource is in creating state. (Value: "CREATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Deleted
 *        Indicates that the resource is in deleted state. (Value: "DELETED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Deleting
 *        Indicates that the resource is in deleting state. (Value: "DELETING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Failed
 *        Indicates that the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_LifecycleState_Updating
 *        Indicates that the resource is in updating state. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *lifecycleState;

/**
 *  Output only. OCID of the Autonomous Database backup.
 *  https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
 */
@property(nonatomic, copy, nullable) NSString *ocid;

/**
 *  Optional. Retention period in days for the backup.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retentionPeriodDays;

/**
 *  Output only. The backup size in terabytes.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeTb;

/** Output only. The date and time the backup started. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. The type of the backup.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_Full
 *        Full backups. (Value: "FULL")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_Incremental
 *        Incremental backups. (Value: "INCREMENTAL")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_LongTerm
 *        Long term backups. (Value: "LONG_TERM")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseBackupProperties_Type_TypeUnspecified
 *        Default unspecified value. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Optional. The OCID of the vault. */
@property(nonatomic, copy, nullable) NSString *vaultId;

@end


/**
 *  Details of the Autonomous Database character set resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/
 */
@interface GTLROracleDatabase_AutonomousDatabaseCharacterSet : GTLRObject

/**
 *  Output only. The character set name for the Autonomous Database which is the
 *  ID in the resource name.
 */
@property(nonatomic, copy, nullable) NSString *characterSet;

/**
 *  Output only. The character set type for the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_CharacterSetTypeUnspecified
 *        Character set type is not specified. (Value:
 *        "CHARACTER_SET_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_Database
 *        Character set type is set to database. (Value: "DATABASE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseCharacterSet_CharacterSetType_National
 *        Character set type is set to national. (Value: "NATIONAL")
 */
@property(nonatomic, copy, nullable) NSString *characterSetType;

/**
 *  Identifier. The name of the Autonomous Database Character Set resource in
 *  the following format:
 *  projects/{project}/locations/{region}/autonomousDatabaseCharacterSets/{autonomous_database_character_set}
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The connection string used to connect to the Autonomous Database.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionStrings
 */
@interface GTLROracleDatabase_AutonomousDatabaseConnectionStrings : GTLRObject

/**
 *  Output only. Returns all connection strings that can be used to connect to
 *  the Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AllConnectionStrings *allConnectionStrings;

/**
 *  Output only. The database service provides the least level of resources to
 *  each SQL statement, but supports the most number of concurrent SQL
 *  statements.
 */
@property(nonatomic, copy, nullable) NSString *dedicated;

/**
 *  Output only. The database service provides the highest level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *high;

/**
 *  Output only. The database service provides the least level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *low;

/**
 *  Output only. The database service provides a lower level of resources to
 *  each SQL statement.
 */
@property(nonatomic, copy, nullable) NSString *medium;

/**
 *  Output only. A list of connection string profiles to allow clients to group,
 *  filter, and select values based on the structured metadata.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DatabaseConnectionStringProfile *> *profiles;

@end


/**
 *  The URLs for accessing Oracle Application Express (APEX) and SQL Developer
 *  Web with a browser from a Compute instance.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionUrls
 */
@interface GTLROracleDatabase_AutonomousDatabaseConnectionUrls : GTLRObject

/** Output only. Oracle Application Express (APEX) URL. */
@property(nonatomic, copy, nullable) NSString *apexUri;

/**
 *  Output only. The URL of the Database Transforms for the Autonomous Database.
 */
@property(nonatomic, copy, nullable) NSString *databaseTransformsUri;

/** Output only. The URL of the Graph Studio for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *graphStudioUri;

/**
 *  Output only. The URL of the Oracle Machine Learning (OML) Notebook for the
 *  Autonomous Database.
 */
@property(nonatomic, copy, nullable) NSString *machineLearningNotebookUri;

/**
 *  Output only. The URL of Machine Learning user management the Autonomous
 *  Database.
 */
@property(nonatomic, copy, nullable) NSString *machineLearningUserManagementUri;

/** Output only. The URL of the MongoDB API for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *mongoDbUri;

/**
 *  Output only. The Oracle REST Data Services (ORDS) URL of the Web Access for
 *  the Autonomous Database.
 */
@property(nonatomic, copy, nullable) NSString *ordsUri;

/**
 *  Output only. The URL of the Oracle SQL Developer Web for the Autonomous
 *  Database.
 */
@property(nonatomic, copy, nullable) NSString *sqlDevWebUri;

@end


/**
 *  The properties of an Autonomous Database.
 */
@interface GTLROracleDatabase_AutonomousDatabaseProperties : GTLRObject

/**
 *  Output only. The amount of storage currently being used for user and system
 *  data, in terabytes.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *actualUsedDataStorageSizeTb;

/**
 *  Output only. The amount of storage currently allocated for the database
 *  tables and billed for, rounded up in terabytes.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedStorageSizeTb;

/**
 *  Optional. The list of allowlisted IP addresses for the Autonomous Database.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowlistedIps;

/** Output only. The details for the Oracle APEX Application Development. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseApex *apexDetails;

/**
 *  Output only. This field indicates the status of Data Guard and Access
 *  control for the Autonomous Database. The field's value is null if Data Guard
 *  is disabled or Access Control is disabled. The field's value is TRUE if both
 *  Data Guard and Access Control are enabled, and the Autonomous Database is
 *  using primary IP access control list (ACL) for standby. The field's value is
 *  FALSE if both Data Guard and Access Control are enabled, and the Autonomous
 *  Database is using a different IP access control list (ACL) for standby
 *  compared to primary.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *arePrimaryAllowlistedIpsUsed;

/** Output only. The Autonomous Container Database OCID. */
@property(nonatomic, copy, nullable) NSString *autonomousContainerDatabaseId;

/**
 *  Output only. The list of available Oracle Database upgrade versions for an
 *  Autonomous Database.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableUpgradeVersions;

/**
 *  Optional. The retention period for the Autonomous Database. This field is
 *  specified in days, can range from 1 day to 60 days, and has a default value
 *  of 60 days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *backupRetentionPeriodDays;

/**
 *  Optional. The character set for the Autonomous Database. The default is
 *  AL32UTF8.
 */
@property(nonatomic, copy, nullable) NSString *characterSet;

/**
 *  Optional. The number of compute servers for the Autonomous Database.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *computeCount;

/**
 *  Output only. The connection strings used to connect to an Autonomous
 *  Database.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseConnectionStrings *connectionStrings;

/** Output only. The Oracle Connection URLs for an Autonomous Database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseConnectionUrls *connectionUrls;

/**
 *  Optional. The number of CPU cores to be made available to the database.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuCoreCount;

/** Optional. The list of customer contacts. */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_CustomerContact *> *customerContacts;

/**
 *  Output only. The current state of database management for the Autonomous
 *  Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_DatabaseManagementStateUnspecified
 *        Default unspecified value. (Value:
 *        "DATABASE_MANAGEMENT_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Disabling
 *        Disabling Database Management state (Value: "DISABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Enabled
 *        Enabled Database Management state (Value: "ENABLED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_Enabling
 *        Enabling Database Management state (Value: "ENABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_FailedDisabling
 *        Failed disabling Database Management state (Value: "FAILED_DISABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_FailedEnabling
 *        Failed enabling Database Management state (Value: "FAILED_ENABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DatabaseManagementState_NotEnabled
 *        Not Enabled Database Management state (Value: "NOT_ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *databaseManagementState;

/**
 *  Output only. The date and time the Autonomous Data Guard role was changed
 *  for the standby Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *dataGuardRoleChangedTime;

/**
 *  Output only. The current state of the Data Safe registration for the
 *  Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_DataSafeStateUnspecified
 *        Default unspecified value. (Value: "DATA_SAFE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Deregistering
 *        Deregistering data safe state. (Value: "DEREGISTERING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Failed
 *        Failed data safe state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_NotRegistered
 *        Not registered data safe state. (Value: "NOT_REGISTERED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Registered
 *        Registered data safe state. (Value: "REGISTERED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DataSafeState_Registering
 *        Registering data safe state. (Value: "REGISTERING")
 */
@property(nonatomic, copy, nullable) NSString *dataSafeState;

/**
 *  Optional. The size of the data stored in the database, in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeGb;

/**
 *  Optional. The size of the data stored in the database, in terabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeTb;

/**
 *  Optional. The edition of the Autonomous Databases.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_DatabaseEditionUnspecified
 *        Default unspecified value. (Value: "DATABASE_EDITION_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_EnterpriseEdition
 *        Enterprise Database Edition (Value: "ENTERPRISE_EDITION")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbEdition_StandardEdition
 *        Standard Database Edition (Value: "STANDARD_EDITION")
 */
@property(nonatomic, copy, nullable) NSString *dbEdition;

/** Optional. The Oracle Database version for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *dbVersion;

/**
 *  Required. The workload type of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Ajd
 *        Autonomous JSON Database. (Value: "AJD")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Apex
 *        Autonomous Database with the Oracle APEX Application Development
 *        workload type. (Value: "APEX")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_DbWorkloadUnspecified
 *        Default unspecified value. (Value: "DB_WORKLOAD_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Dw
 *        Autonomous Data Warehouse database. (Value: "DW")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_DbWorkload_Oltp
 *        Autonomous Transaction Processing database. (Value: "OLTP")
 */
@property(nonatomic, copy, nullable) NSString *dbWorkload;

/**
 *  Output only. The date and time the Disaster Recovery role was changed for
 *  the standby Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *disasterRecoveryRoleChangedTime;

/**
 *  Optional. The encryption key used to encrypt the Autonomous Database.
 *  Updating this field will add a new entry in the
 *  `encryption_key_history_entries` field with the former version.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_EncryptionKey *encryptionKey;

/**
 *  Output only. The history of the encryption keys used to encrypt the
 *  Autonomous Database.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_EncryptionKeyHistoryEntry *> *encryptionKeyHistoryEntries;

/**
 *  Output only. This field indicates the number of seconds of data loss during
 *  a Data Guard failover.
 */
@property(nonatomic, strong, nullable) GTLRDuration *failedDataRecoveryDuration;

/**
 *  Optional. This field indicates if auto scaling is enabled for the Autonomous
 *  Database CPU core count.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAutoScalingEnabled;

/**
 *  Output only. This field indicates whether the Autonomous Database has local
 *  (in-region) Data Guard enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isLocalDataGuardEnabled;

/**
 *  Optional. This field indicates if auto scaling is enabled for the Autonomous
 *  Database storage.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isStorageAutoScalingEnabled;

/**
 *  Required. The license type used for the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_BringYourOwnLicense
 *        Bring your own license (Value: "BRING_YOUR_OWN_LICENSE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_LicenseIncluded
 *        License included part of offer (Value: "LICENSE_INCLUDED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LicenseType_LicenseTypeUnspecified
 *        Unspecified (Value: "LICENSE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *licenseType;

/**
 *  Output only. The details of the current lifestyle state of the Autonomous
 *  Database.
 */
@property(nonatomic, copy, nullable) NSString *lifecycleDetails;

/**
 *  Output only. This field indicates the maximum data loss limit for an
 *  Autonomous Database, in seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localAdgAutoFailoverMaxDataLossLimit;

/**
 *  Output only. This field indicates the local disaster recovery (DR) type of
 *  an Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_Adg
 *        Autonomous Data Guard recovery. (Value: "ADG")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_BackupBased
 *        Backup based recovery. (Value: "BACKUP_BASED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_LocalDisasterRecoveryType_LocalDisasterRecoveryTypeUnspecified
 *        Default unspecified value. (Value:
 *        "LOCAL_DISASTER_RECOVERY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *localDisasterRecoveryType;

/** Output only. The details of the Autonomous Data Guard standby database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_AutonomousDatabaseStandbySummary *localStandbyDb;

/** Output only. The date and time when maintenance will begin. */
@property(nonatomic, strong, nullable) GTLRDateTime *maintenanceBeginTime;

/** Output only. The date and time when maintenance will end. */
@property(nonatomic, strong, nullable) GTLRDateTime *maintenanceEndTime;

/**
 *  Optional. The maintenance schedule of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_Early
 *        An EARLY maintenance schedule patches the database before the regular
 *        scheduled maintenance. (Value: "EARLY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_MaintenanceScheduleTypeUnspecified
 *        Default unspecified value. (Value:
 *        "MAINTENANCE_SCHEDULE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_MaintenanceScheduleType_Regular
 *        A REGULAR maintenance schedule follows the normal maintenance cycle.
 *        (Value: "REGULAR")
 */
@property(nonatomic, copy, nullable) NSString *maintenanceScheduleType;

/**
 *  Output only. The amount of memory enabled per ECPU, in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryPerOracleComputeUnitGbs;

/**
 *  Output only. The memory assigned to in-memory tables in an Autonomous
 *  Database.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryTableGbs;

/**
 *  Optional. This field specifies if the Autonomous Database requires mTLS
 *  connections.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mtlsConnectionRequired;

/**
 *  Optional. The national character set for the Autonomous Database. The
 *  default is AL16UTF16.
 */
@property(nonatomic, copy, nullable) NSString *nCharacterSet;

/** Output only. The long term backup schedule of the Autonomous Database. */
@property(nonatomic, strong, nullable) GTLRDateTime *nextLongTermBackupTime;

/**
 *  Output only. OCID of the Autonomous Database.
 *  https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
 */
@property(nonatomic, copy, nullable) NSString *ocid;

/**
 *  Output only. The Oracle Cloud Infrastructure link for the Autonomous
 *  Database.
 */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/**
 *  Output only. This field indicates the current mode of the Autonomous
 *  Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_OpenModeUnspecified
 *        Default unspecified value. (Value: "OPEN_MODE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_ReadOnly
 *        Read Only Mode (Value: "READ_ONLY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OpenMode_ReadWrite
 *        Read Write Mode (Value: "READ_WRITE")
 */
@property(nonatomic, copy, nullable) NSString *openMode;

/**
 *  Output only. This field indicates the state of Operations Insights for the
 *  Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Disabling
 *        Disabling status for operation insights. (Value: "DISABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Enabled
 *        Enabled status for operation insights. (Value: "ENABLED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_Enabling
 *        Enabling status for operation insights. (Value: "ENABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_FailedDisabling
 *        Failed disabling status for operation insights. (Value:
 *        "FAILED_DISABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_FailedEnabling
 *        Failed enabling status for operation insights. (Value:
 *        "FAILED_ENABLING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_NotEnabled
 *        Not Enabled status for operation insights. (Value: "NOT_ENABLED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_OperationsInsightsState_OperationsInsightsStateUnspecified
 *        Default unspecified value. (Value:
 *        "OPERATIONS_INSIGHTS_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *operationsInsightsState;

/**
 *  Output only. The list of OCIDs of standby databases located in Autonomous
 *  Data Guard remote regions that are associated with the source database.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *peerDbIds;

/**
 *  Output only. The permission level of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_PermissionLevelUnspecified
 *        Default unspecified value. (Value: "PERMISSION_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_Restricted
 *        Restricted mode allows access only by admin users. (Value:
 *        "RESTRICTED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_PermissionLevel_Unrestricted
 *        Normal access. (Value: "UNRESTRICTED")
 */
@property(nonatomic, copy, nullable) NSString *permissionLevel;

/** Output only. The private endpoint for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *privateEndpoint;

/** Optional. The private endpoint IP address for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *privateEndpointIp;

/** Optional. The private endpoint label for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *privateEndpointLabel;

/**
 *  Output only. The refresh mode of the cloned Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_Automatic
 *        AUTOMATIC indicates that the cloned database is automatically
 *        refreshed with data from the source Autonomous Database. (Value:
 *        "AUTOMATIC")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_Manual
 *        MANUAL indicates that the cloned database is manually refreshed with
 *        data from the source Autonomous Database. (Value: "MANUAL")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableMode_RefreshableModeUnspecified
 *        The default unspecified value. (Value: "REFRESHABLE_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *refreshableMode;

/**
 *  Output only. The refresh State of the clone.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_NotRefreshing
 *        Not refreshed (Value: "NOT_REFRESHING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_RefreshableStateUnspecified
 *        Default unspecified value. (Value: "REFRESHABLE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_RefreshableState_Refreshing
 *        Refreshing (Value: "REFRESHING")
 */
@property(nonatomic, copy, nullable) NSString *refreshableState;

/**
 *  Output only. The Data Guard role of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_BackupCopy
 *        Backup copy role (Value: "BACKUP_COPY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_DisabledStandby
 *        Disabled standby role (Value: "DISABLED_STANDBY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_Primary
 *        Primary role (Value: "PRIMARY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_RoleUnspecified
 *        Default unspecified value. (Value: "ROLE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_SnapshotStandby
 *        Snapshot standby role (Value: "SNAPSHOT_STANDBY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_Role_Standby
 *        Standby role (Value: "STANDBY")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  Output only. The list and details of the scheduled operations of the
 *  Autonomous Database.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_ScheduledOperationDetails *> *scheduledOperationDetails;

/** Optional. The ID of the Oracle Cloud Infrastructure vault secret. */
@property(nonatomic, copy, nullable) NSString *secretId;

/**
 *  Output only. An Oracle-managed Google Cloud service account on which
 *  customers can grant roles to access resources in the customer project.
 */
@property(nonatomic, copy, nullable) NSString *serviceAgentEmail;

/** Output only. The SQL Web Developer URL for the Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *sqlWebDeveloperUrl;

/**
 *  Output only. The current lifecycle state of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Available
 *        Indicates that the Autonomous Database is in available state. (Value:
 *        "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_AvailableNeedsAttention
 *        Indicates that the Autonomous Database is available but needs
 *        attention state. (Value: "AVAILABLE_NEEDS_ATTENTION")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_BackupInProgress
 *        Indicates that the Autonomous Database backup is in progress. (Value:
 *        "BACKUP_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Inaccessible
 *        Indicates that the Autonomous Database is in inaccessible state.
 *        (Value: "INACCESSIBLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_MaintenanceInProgress
 *        Indicates that the Autonomous Database's maintenance is in progress
 *        state. (Value: "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Provisioning
 *        Indicates that the Autonomous Database is in provisioning state.
 *        (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Recreating
 *        Indicates that the Autonomous Database is in recreating state. (Value:
 *        "RECREATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Restarting
 *        Indicates that the Autonomous Database is in restarting state. (Value:
 *        "RESTARTING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_RestoreFailed
 *        Indicates that the Autonomous Database failed to restore. (Value:
 *        "RESTORE_FAILED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_RestoreInProgress
 *        Indicates that the Autonomous Database restore is in progress. (Value:
 *        "RESTORE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_RoleChangeInProgress
 *        Indicates that the Autonomous Database's role change is in progress
 *        state. (Value: "ROLE_CHANGE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_ScaleInProgress
 *        Indicates that the Autonomous Database scale is in progress. (Value:
 *        "SCALE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Standby
 *        Indicates that the Autonomous Database is in standby state. (Value:
 *        "STANDBY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Starting
 *        Indicates that the Autonomous Database is in starting state. (Value:
 *        "STARTING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Stopped
 *        Indicates that the Autonomous Database is in stopped state. (Value:
 *        "STOPPED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Stopping
 *        Indicates that the Autonomous Database is in stopping state. (Value:
 *        "STOPPING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Terminated
 *        Indicates that the Autonomous Database is in terminated state. (Value:
 *        "TERMINATED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Terminating
 *        Indicates that the Autonomous Database is in terminating state.
 *        (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Unavailable
 *        Indicates that the Autonomous Database is in unavailable state.
 *        (Value: "UNAVAILABLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Updating
 *        Indicates that the Autonomous Database is in updating state. (Value:
 *        "UPDATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseProperties_State_Upgrading
 *        Indicates that the Autonomous Database is in upgrading state. (Value:
 *        "UPGRADING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The list of available regions that can be used to create a
 *  clone for the Autonomous Database.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedCloneRegions;

/**
 *  Output only. The storage space used by automatic backups of Autonomous
 *  Database, in gigabytes.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalAutoBackupStorageSizeGbs;

/**
 *  Output only. The storage space used by Autonomous Database, in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usedDataStorageSizeTbs;

/** Optional. The ID of the Oracle Cloud Infrastructure vault. */
@property(nonatomic, copy, nullable) NSString *vaultId;

@end


/**
 *  Autonomous Data Guard standby database details.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseStandbySummary
 */
@interface GTLROracleDatabase_AutonomousDatabaseStandbySummary : GTLRObject

/**
 *  Output only. The date and time the Autonomous Data Guard role was switched
 *  for the standby Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *dataGuardRoleChangedTime;

/**
 *  Output only. The date and time the Disaster Recovery role was switched for
 *  the standby Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *disasterRecoveryRoleChangedTime;

/**
 *  Output only. The amount of time, in seconds, that the data of the standby
 *  database lags in comparison to the data of the primary database.
 */
@property(nonatomic, strong, nullable) GTLRDuration *lagTimeDuration;

/**
 *  Output only. The additional details about the current lifecycle state of the
 *  Autonomous Database.
 */
@property(nonatomic, copy, nullable) NSString *lifecycleDetails;

/**
 *  Output only. The current lifecycle state of the Autonomous Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Available
 *        Indicates that the Autonomous Database is in available state. (Value:
 *        "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_AvailableNeedsAttention
 *        Indicates that the Autonomous Database is available but needs
 *        attention state. (Value: "AVAILABLE_NEEDS_ATTENTION")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_BackupInProgress
 *        Indicates that the Autonomous Database backup is in progress. (Value:
 *        "BACKUP_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Inaccessible
 *        Indicates that the Autonomous Database is in inaccessible state.
 *        (Value: "INACCESSIBLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_MaintenanceInProgress
 *        Indicates that the Autonomous Database's maintenance is in progress
 *        state. (Value: "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Provisioning
 *        Indicates that the Autonomous Database is in provisioning state.
 *        (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Recreating
 *        Indicates that the Autonomous Database is in recreating state. (Value:
 *        "RECREATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Restarting
 *        Indicates that the Autonomous Database is in restarting state. (Value:
 *        "RESTARTING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RestoreFailed
 *        Indicates that the Autonomous Database failed to restore. (Value:
 *        "RESTORE_FAILED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RestoreInProgress
 *        Indicates that the Autonomous Database restore is in progress. (Value:
 *        "RESTORE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_RoleChangeInProgress
 *        Indicates that the Autonomous Database's role change is in progress
 *        state. (Value: "ROLE_CHANGE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_ScaleInProgress
 *        Indicates that the Autonomous Database scale is in progress. (Value:
 *        "SCALE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Standby
 *        Indicates that the Autonomous Database is in standby state. (Value:
 *        "STANDBY")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Starting
 *        Indicates that the Autonomous Database is in starting state. (Value:
 *        "STARTING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Stopped
 *        Indicates that the Autonomous Database is in stopped state. (Value:
 *        "STOPPED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Stopping
 *        Indicates that the Autonomous Database is in stopping state. (Value:
 *        "STOPPING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Terminated
 *        Indicates that the Autonomous Database is in terminated state. (Value:
 *        "TERMINATED")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Terminating
 *        Indicates that the Autonomous Database is in terminating state.
 *        (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Unavailable
 *        Indicates that the Autonomous Database is in unavailable state.
 *        (Value: "UNAVAILABLE")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Updating
 *        Indicates that the Autonomous Database is in updating state. (Value:
 *        "UPDATING")
 *    @arg @c kGTLROracleDatabase_AutonomousDatabaseStandbySummary_State_Upgrading
 *        Indicates that the Autonomous Database is in upgrading state. (Value:
 *        "UPGRADING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Details of the Autonomous Database version.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDbVersionSummary/
 */
@interface GTLROracleDatabase_AutonomousDbVersion : GTLRObject

/**
 *  Output only. The Autonomous Database workload type.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Ajd Autonomous
 *        JSON Database. (Value: "AJD")
 *    @arg @c kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Apex Autonomous
 *        Database with the Oracle APEX Application Development workload type.
 *        (Value: "APEX")
 *    @arg @c kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_DbWorkloadUnspecified
 *        Default unspecified value. (Value: "DB_WORKLOAD_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Dw Autonomous
 *        Data Warehouse database. (Value: "DW")
 *    @arg @c kGTLROracleDatabase_AutonomousDbVersion_DbWorkload_Oltp Autonomous
 *        Transaction Processing database. (Value: "OLTP")
 */
@property(nonatomic, copy, nullable) NSString *dbWorkload;

/**
 *  Identifier. The name of the Autonomous Database Version resource with the
 *  format:
 *  projects/{project}/locations/{region}/autonomousDbVersions/{autonomous_db_version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. An Oracle Database version for Autonomous Database. */
@property(nonatomic, copy, nullable) NSString *version;

/**
 *  Output only. A URL that points to a detailed description of the Autonomous
 *  Database version.
 */
@property(nonatomic, copy, nullable) NSString *workloadUri;

@end


/**
 *  The details of the database backup destination.
 */
@interface GTLROracleDatabase_BackupDestinationDetails : GTLRObject

/**
 *  Optional. The type of the database backup destination.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_BackupDestinationTypeUnspecified
 *        Default unspecified value. (Value:
 *        "BACKUP_DESTINATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_Dbrs Backup
 *        destination type is DBRS. (Value: "DBRS")
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_Local Backup
 *        destination type is Local. (Value: "LOCAL")
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_Nfs Backup
 *        destination type is NFS. (Value: "NFS")
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_ObjectStore
 *        Backup destination type is Object Store. (Value: "OBJECT_STORE")
 *    @arg @c kGTLROracleDatabase_BackupDestinationDetails_Type_RecoveryAppliance
 *        Backup destination type is Recovery Appliance. (Value:
 *        "RECOVERY_APPLIANCE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLROracleDatabase_CancelOperationRequest : GTLRObject
@end


/**
 *  Details of the OCI Cloud Account.
 */
@interface GTLROracleDatabase_CloudAccountDetails : GTLRObject

/** Output only. URL to create a new account and link. */
@property(nonatomic, copy, nullable) NSString *accountCreationUri;

/** Output only. OCI account name. */
@property(nonatomic, copy, nullable) NSString *cloudAccount;

/** Output only. OCI account home region. */
@property(nonatomic, copy, nullable) NSString *cloudAccountHomeRegion;

/** Output only. URL to link an existing account. */
@property(nonatomic, copy, nullable) NSString *linkExistingAccountUri;

@end


/**
 *  Represents CloudExadataInfrastructure resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/CloudExadataInfrastructure/
 */
@interface GTLROracleDatabase_CloudExadataInfrastructure : GTLRObject

/**
 *  Output only. The date and time that the Exadata Infrastructure was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. User friendly name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Entitlement ID of the private offer against which this
 *  infrastructure resource is provisioned.
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Optional. The GCP Oracle zone where Oracle Exadata Infrastructure is hosted.
 *  Example: us-east4-b-r2. If not specified, the system will pick a zone based
 *  on availability.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/** Optional. Labels or tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_CloudExadataInfrastructure_Labels *labels;

/**
 *  Identifier. The name of the Exadata Infrastructure resource with the format:
 *  projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Various properties of the infra. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_CloudExadataInfrastructureProperties *properties;

@end


/**
 *  Optional. Labels or tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_CloudExadataInfrastructure_Labels : GTLRObject
@end


/**
 *  Various properties of Exadata Infrastructure.
 */
@interface GTLROracleDatabase_CloudExadataInfrastructureProperties : GTLRObject

/**
 *  Output only. The requested number of additional storage servers activated
 *  for the Exadata Infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *activatedStorageCount;

/**
 *  Output only. The requested number of additional storage servers for the
 *  Exadata Infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *additionalStorageCount;

/**
 *  Output only. The available storage can be allocated to the Exadata
 *  Infrastructure resource, in gigabytes (GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableStorageSizeGb;

/**
 *  Optional. The number of compute servers for the Exadata Infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *computeCount;

/**
 *  Output only. The compute model of the Exadata Infrastructure.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelEcpu
 *        Abstract measure of compute resources. ECPUs are based on the number
 *        of cores elastically allocated from a pool of compute and storage
 *        servers. (Value: "COMPUTE_MODEL_ECPU")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelOcpu
 *        Physical measure of compute resources. OCPUs are based on the physical
 *        core of a processor. (Value: "COMPUTE_MODEL_OCPU")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_ComputeModel_ComputeModelUnspecified
 *        Unspecified compute model. (Value: "COMPUTE_MODEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *computeModel;

/**
 *  Output only. The number of enabled CPU cores.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuCount;

/** Optional. The list of customer contacts. */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_CustomerContact *> *customerContacts;

/** Output only. The database server type of the Exadata Infrastructure. */
@property(nonatomic, copy, nullable) NSString *databaseServerType;

/**
 *  Output only. Size, in terabytes, of the DATA disk group.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeTb;

/**
 *  Output only. The local node storage allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dbNodeStorageSizeGb;

/**
 *  Output only. The software version of the database servers (dom0) in the
 *  Exadata Infrastructure.
 */
@property(nonatomic, copy, nullable) NSString *dbServerVersion;

/** Optional. Maintenance window for repair. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_MaintenanceWindow *maintenanceWindow;

/**
 *  Output only. The total number of CPU cores available.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxCpuCount;

/**
 *  Output only. The total available DATA disk group size.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDataStorageTb;

/**
 *  Output only. The total local node storage available in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDbNodeStorageSizeGb;

/**
 *  Output only. The total memory available in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxMemoryGb;

/**
 *  Output only. The memory allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/**
 *  Output only. The monthly software version of the database servers (dom0) in
 *  the Exadata Infrastructure. Example: 20.1.15
 */
@property(nonatomic, copy, nullable) NSString *monthlyDbServerVersion;

/**
 *  Output only. The monthly software version of the storage servers (cells) in
 *  the Exadata Infrastructure. Example: 20.1.15
 */
@property(nonatomic, copy, nullable) NSString *monthlyStorageServerVersion;

/** Output only. The OCID of the next maintenance run. */
@property(nonatomic, copy, nullable) NSString *nextMaintenanceRunId;

/** Output only. The time when the next maintenance run will occur. */
@property(nonatomic, strong, nullable) GTLRDateTime *nextMaintenanceRunTime;

/**
 *  Output only. The time when the next security maintenance run will occur.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *nextSecurityMaintenanceRunTime;

/**
 *  Output only. OCID of created infra.
 *  https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
 */
@property(nonatomic, copy, nullable) NSString *ocid;

/** Output only. Deep link to the OCI console to view this resource. */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/**
 *  Required. The shape of the Exadata Infrastructure. The shape determines the
 *  amount of CPU, storage, and memory resources allocated to the instance.
 */
@property(nonatomic, copy, nullable) NSString *shape;

/**
 *  Output only. The current lifecycle state of the Exadata Infrastructure.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Available
 *        The Exadata Infrastructure is available for use. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Failed
 *        The Exadata Infrastructure is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_MaintenanceInProgress
 *        The Exadata Infrastructure is in maintenance. (Value:
 *        "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Provisioning
 *        The Exadata Infrastructure is being provisioned. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Terminated
 *        The Exadata Infrastructure is terminated. (Value: "TERMINATED")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Terminating
 *        The Exadata Infrastructure is being terminated. (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_CloudExadataInfrastructureProperties_State_Updating
 *        The Exadata Infrastructure is being updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional. The number of Cloud Exadata storage servers for the Exadata
 *  Infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageCount;

/** Output only. The storage server type of the Exadata Infrastructure. */
@property(nonatomic, copy, nullable) NSString *storageServerType;

/**
 *  Output only. The software version of the storage servers (cells) in the
 *  Exadata Infrastructure.
 */
@property(nonatomic, copy, nullable) NSString *storageServerVersion;

/**
 *  Optional. The total storage allocated to the Exadata Infrastructure
 *  resource, in gigabytes (GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalStorageSizeGb;

@end


/**
 *  Details of the Cloud VM Cluster resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/CloudVmCluster/
 */
@interface GTLROracleDatabase_CloudVmCluster : GTLRObject

/**
 *  Optional. The name of the backup OdbSubnet associated with the VM Cluster.
 *  Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *backupOdbSubnet;

/** Optional. CIDR range of the backup subnet. */
@property(nonatomic, copy, nullable) NSString *backupSubnetCidr;

/** Optional. Network settings. CIDR to use for cluster IP allocation. */
@property(nonatomic, copy, nullable) NSString *cidr;

/** Output only. The date and time that the VM cluster was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. User friendly name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The name of the Exadata Infrastructure resource on which VM
 *  cluster resource is created, in the following format:
 *  projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
 */
@property(nonatomic, copy, nullable) NSString *exadataInfrastructure;

/**
 *  Output only. The GCP Oracle zone where Oracle CloudVmCluster is hosted. This
 *  will be the same as the gcp_oracle_zone of the CloudExadataInfrastructure.
 *  Example: us-east4-b-r2.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/**
 *  Output only. The identity connector details which will allow OCI to securely
 *  access the resources in the customer project.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_IdentityConnector *identityConnector;

/** Optional. Labels or tags associated with the VM Cluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_CloudVmCluster_Labels *labels;

/**
 *  Identifier. The name of the VM Cluster resource with the format:
 *  projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The name of the VPC network. Format:
 *  projects/{project}/global/networks/{network}
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Optional. The name of the OdbNetwork associated with the VM Cluster. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network} It is
 *  optional but if specified, this should match the parent ODBNetwork of the
 *  odb_subnet and backup_odb_subnet.
 */
@property(nonatomic, copy, nullable) NSString *odbNetwork;

/**
 *  Optional. The name of the OdbSubnet associated with the VM Cluster for IP
 *  allocation. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *odbSubnet;

/** Optional. Various properties of the VM Cluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_CloudVmClusterProperties *properties;

@end


/**
 *  Optional. Labels or tags associated with the VM Cluster.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_CloudVmCluster_Labels : GTLRObject
@end


/**
 *  Various properties and settings associated with Exadata VM cluster.
 */
@interface GTLROracleDatabase_CloudVmClusterProperties : GTLRObject

/** Optional. OCI Cluster name. */
@property(nonatomic, copy, nullable) NSString *clusterName;

/** Output only. Compartment ID of cluster. */
@property(nonatomic, copy, nullable) NSString *compartmentId;

/**
 *  Output only. The compute model of the VM Cluster.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelEcpu
 *        Abstract measure of compute resources. ECPUs are based on the number
 *        of cores elastically allocated from a pool of compute and storage
 *        servers. (Value: "COMPUTE_MODEL_ECPU")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelOcpu
 *        Physical measure of compute resources. OCPUs are based on the physical
 *        core of a processor. (Value: "COMPUTE_MODEL_OCPU")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_ComputeModel_ComputeModelUnspecified
 *        Unspecified compute model. (Value: "COMPUTE_MODEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *computeModel;

/**
 *  Required. Number of enabled CPU cores.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuCoreCount;

/**
 *  Optional. The data disk group size to be allocated in TBs.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeTb;

/**
 *  Optional. Local storage per VM.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dbNodeStorageSizeGb;

/** Optional. OCID of database servers. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dbServerOcids;

/** Optional. Data collection options for diagnostics. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DataCollectionOptions *diagnosticsDataCollectionOptions;

/**
 *  Optional. The type of redundancy.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_DiskRedundancyUnspecified
 *        Unspecified. (Value: "DISK_REDUNDANCY_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_High
 *        High - 3 way mirror. (Value: "HIGH")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_DiskRedundancy_Normal
 *        Normal - 2 way mirror. (Value: "NORMAL")
 */
@property(nonatomic, copy, nullable) NSString *diskRedundancy;

/** Output only. DNS listener IP. */
@property(nonatomic, copy, nullable) NSString *dnsListenerIp;

/**
 *  Output only. Parent DNS domain where SCAN DNS and hosts names are qualified.
 *  ex: ocispdelegated.ocisp10jvnet.oraclevcn.com
 */
@property(nonatomic, copy, nullable) NSString *domain;

/** Optional. Grid Infrastructure Version. */
@property(nonatomic, copy, nullable) NSString *giVersion;

/**
 *  Output only. host name without domain. format: "-" with some suffix. ex:
 *  sp2-yi0xq where "sp2" is the hostname_prefix.
 */
@property(nonatomic, copy, nullable) NSString *hostname;

/** Optional. Prefix for VM cluster host names. */
@property(nonatomic, copy, nullable) NSString *hostnamePrefix;

/**
 *  Required. License type of VM Cluster.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_BringYourOwnLicense
 *        Bring your own license (Value: "BRING_YOUR_OWN_LICENSE")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_LicenseIncluded
 *        License included part of offer (Value: "LICENSE_INCLUDED")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_LicenseType_LicenseTypeUnspecified
 *        Unspecified (Value: "LICENSE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *licenseType;

/**
 *  Optional. Use local backup.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localBackupEnabled;

/**
 *  Optional. Memory allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/**
 *  Optional. Number of database servers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

/** Output only. Oracle Cloud Infrastructure ID of VM Cluster. */
@property(nonatomic, copy, nullable) NSString *ocid;

/** Output only. Deep link to the OCI console to view this resource. */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/**
 *  Optional. OCPU count per VM. Minimum is 0.1.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ocpuCount;

/**
 *  Output only. SCAN DNS name. ex:
 *  sp2-yi0xq-scan.ocispdelegated.ocisp10jvnet.oraclevcn.com
 */
@property(nonatomic, copy, nullable) NSString *scanDns;

/** Output only. OCID of scan DNS record. */
@property(nonatomic, copy, nullable) NSString *scanDnsRecordId;

/** Output only. OCIDs of scan IPs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *scanIpIds;

/**
 *  Output only. SCAN listener port - TCP
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scanListenerPortTcp;

/**
 *  Output only. SCAN listener port - TLS
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scanListenerPortTcpSsl;

/** Output only. Shape of VM Cluster. */
@property(nonatomic, copy, nullable) NSString *shape;

/**
 *  Optional. Use exadata sparse snapshots.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sparseDiskgroupEnabled;

/** Optional. SSH public keys to be stored with cluster. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sshPublicKeys;

/**
 *  Output only. State of the cluster.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Available
 *        Indicates that the resource is in available state. (Value:
 *        "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Failed
 *        Indicates that the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_MaintenanceInProgress
 *        Indicates that the resource is in maintenance in progress state.
 *        (Value: "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Provisioning
 *        Indicates that the resource is in provisioning state. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Terminated
 *        Indicates that the resource is in terminated state. (Value:
 *        "TERMINATED")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Terminating
 *        Indicates that the resource is in terminating state. (Value:
 *        "TERMINATING")
 *    @arg @c kGTLROracleDatabase_CloudVmClusterProperties_State_Updating
 *        Indicates that the resource is in updating state. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The storage allocation for the disk group, in gigabytes (GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageSizeGb;

/** Optional. Operating system version of the image. */
@property(nonatomic, copy, nullable) NSString *systemVersion;

/**
 *  Optional. Time zone of VM Cluster to set. Defaults to UTC if not specified.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeZone *timeZone;

@end


/**
 *  The CustomerContact reference as defined by Oracle.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/CustomerContact
 */
@interface GTLROracleDatabase_CustomerContact : GTLRObject

/**
 *  Required. The email address used by Oracle to send notifications regarding
 *  databases and infrastructure.
 */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  Details of the Database resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/Database/
 */
@interface GTLROracleDatabase_Database : GTLRObject

/** Required. The password for the default ADMIN user. */
@property(nonatomic, copy, nullable) NSString *adminPassword;

/** Optional. The character set for the database. The default is AL32UTF8. */
@property(nonatomic, copy, nullable) NSString *characterSet;

/** Output only. The date and time that the Database was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. The database ID of the Database. */
@property(nonatomic, copy, nullable) NSString *databaseId;

/** Optional. The name of the DbHome resource associated with the Database. */
@property(nonatomic, copy, nullable) NSString *dbHomeName;

/**
 *  Optional. The database name. The name must begin with an alphabetic
 *  character and can contain a maximum of eight alphanumeric characters.
 *  Special characters are not permitted.
 */
@property(nonatomic, copy, nullable) NSString *dbName;

/** Optional. The DB_UNIQUE_NAME of the Oracle Database being backed up. */
@property(nonatomic, copy, nullable) NSString *dbUniqueName;

/** Output only. The GCP Oracle zone where the Database is created. */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/**
 *  Identifier. The name of the Database resource in the following format:
 *  projects/{project}/locations/{region}/databases/{database}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The national character set for the database. The default is
 *  AL16UTF16.
 */
@property(nonatomic, copy, nullable) NSString *ncharacterSet;

/**
 *  Output only. HTTPS link to OCI resources exposed to Customer via UI
 *  Interface.
 */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/**
 *  Output only. The Status of Operations Insights for this Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_Disabling Indicates
 *        that the operations insights are being disabled. (Value: "DISABLING")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_Enabled Indicates
 *        that the operations insights are enabled. (Value: "ENABLED")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_Enabling Indicates
 *        that the operations insights are being enabled. (Value: "ENABLING")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_FailedDisabling
 *        Indicates that the operations insights failed to disable. (Value:
 *        "FAILED_DISABLING")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_FailedEnabling
 *        Indicates that the operations insights failed to enable. (Value:
 *        "FAILED_ENABLING")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_NotEnabled
 *        Indicates that the operations insights are not enabled. (Value:
 *        "NOT_ENABLED")
 *    @arg @c kGTLROracleDatabase_Database_OpsInsightsStatus_OperationsInsightsStatusUnspecified
 *        Default unspecified value. (Value:
 *        "OPERATIONS_INSIGHTS_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *opsInsightsStatus;

/** Optional. The properties of the Database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DatabaseProperties *properties;

/** Optional. The TDE wallet password for the database. */
@property(nonatomic, copy, nullable) NSString *tdeWalletPassword;

@end


/**
 *  Details of the Database character set resource.
 */
@interface GTLROracleDatabase_DatabaseCharacterSet : GTLRObject

/**
 *  Output only. The character set name for the Database which is the ID in the
 *  resource name.
 */
@property(nonatomic, copy, nullable) NSString *characterSet;

/**
 *  Output only. The character set type for the Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_CharacterSetTypeUnspecified
 *        Character set type is not specified. (Value:
 *        "CHARACTER_SET_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_Database
 *        Character set type is set to database. (Value: "DATABASE")
 *    @arg @c kGTLROracleDatabase_DatabaseCharacterSet_CharacterSetType_National
 *        Character set type is set to national. (Value: "NATIONAL")
 */
@property(nonatomic, copy, nullable) NSString *characterSetType;

/**
 *  Identifier. The name of the Database Character Set resource in the following
 *  format:
 *  projects/{project}/locations/{region}/databaseCharacterSets/{database_character_set}
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The connection string profile to allow clients to group.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/DatabaseConnectionStringProfile
 */
@interface GTLROracleDatabase_DatabaseConnectionStringProfile : GTLRObject

/**
 *  Output only. The current consumer group being used by the connection.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_ConsumerGroupUnspecified
 *        Default unspecified value. (Value: "CONSUMER_GROUP_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_High
 *        High consumer group. (Value: "HIGH")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Low
 *        Low consumer group. (Value: "LOW")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Medium
 *        Medium consumer group. (Value: "MEDIUM")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Tp
 *        TP consumer group. (Value: "TP")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_ConsumerGroup_Tpurgent
 *        TPURGENT consumer group. (Value: "TPURGENT")
 */
@property(nonatomic, copy, nullable) NSString *consumerGroup;

/** Output only. The display name for the database connection. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The host name format being currently used in connection string.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_Fqdn
 *        FQDN (Value: "FQDN")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_HostFormatUnspecified
 *        Default unspecified value. (Value: "HOST_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_HostFormat_Ip
 *        IP (Value: "IP")
 */
@property(nonatomic, copy, nullable) NSString *hostFormat;

/**
 *  Output only. This field indicates if the connection string is regional and
 *  is only applicable for cross-region Data Guard.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRegional;

/**
 *  Output only. The protocol being used by the connection.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_ProtocolUnspecified
 *        Default unspecified value. (Value: "PROTOCOL_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_Tcp
 *        Tcp (Value: "TCP")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_Protocol_Tcps
 *        Tcps (Value: "TCPS")
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  Output only. The current session mode of the connection.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_Direct
 *        Direct (Value: "DIRECT")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_Indirect
 *        Indirect (Value: "INDIRECT")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SessionMode_SessionModeUnspecified
 *        Default unspecified value. (Value: "SESSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sessionMode;

/**
 *  Output only. The syntax of the connection string.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Ezconnect
 *        Ezconnect (Value: "EZCONNECT")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Ezconnectplus
 *        Ezconnectplus (Value: "EZCONNECTPLUS")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_Long
 *        Long (Value: "LONG")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_SyntaxFormat_SyntaxFormatUnspecified
 *        Default unspecified value. (Value: "SYNTAX_FORMAT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *syntaxFormat;

/**
 *  Output only. This field indicates the TLS authentication type of the
 *  connection.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_Mutual
 *        Mutual (Value: "MUTUAL")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_Server
 *        Server (Value: "SERVER")
 *    @arg @c kGTLROracleDatabase_DatabaseConnectionStringProfile_TlsAuthentication_TlsAuthenticationUnspecified
 *        Default unspecified value. (Value: "TLS_AUTHENTICATION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *tlsAuthentication;

/** Output only. The value of the connection string. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The configuration of the Database Management service.
 */
@interface GTLROracleDatabase_DatabaseManagementConfig : GTLRObject

/**
 *  Output only. The status of the Database Management service.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Disabled
 *        The Database Management service is disabled. (Value: "DISABLED")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Disabling
 *        The Database Management service is disabling. (Value: "DISABLING")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Enabled
 *        The Database Management service is enabled. (Value: "ENABLED")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Enabling
 *        The Database Management service is enabling. (Value: "ENABLING")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedDisabling
 *        The Database Management service failed to disable. (Value:
 *        "FAILED_DISABLING")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedEnabling
 *        The Database Management service failed to enable. (Value:
 *        "FAILED_ENABLING")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_FailedUpdating
 *        The Database Management service failed to update. (Value:
 *        "FAILED_UPDATING")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_ManagementStateUnspecified
 *        The status is not specified. (Value: "MANAGEMENT_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementState_Updating
 *        The Database Management service is updating. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *managementState;

/**
 *  Output only. The Database Management type.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_Advanced
 *        Advanced Database Management. (Value: "ADVANCED")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_Basic
 *        Basic Database Management. (Value: "BASIC")
 *    @arg @c kGTLROracleDatabase_DatabaseManagementConfig_ManagementType_ManagementTypeUnspecified
 *        The type is not specified. (Value: "MANAGEMENT_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *managementType;

@end


/**
 *  The properties of a Database.
 */
@interface GTLROracleDatabase_DatabaseProperties : GTLRObject

/** Output only. The Database Management config. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DatabaseManagementConfig *databaseManagementConfig;

/** Optional. Backup options for the Database. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbBackupConfig *dbBackupConfig;

/** Required. The Oracle Database version. */
@property(nonatomic, copy, nullable) NSString *dbVersion;

/**
 *  Output only. State of the Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Available Indicates
 *        that the resource is in available state. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_BackupInProgress
 *        Indicates that the resource is in backup in progress state. (Value:
 *        "BACKUP_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Converting Indicates
 *        that the resource is in converting state. (Value: "CONVERTING")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_DatabaseLifecycleStateUnspecified
 *        Default unspecified value. (Value:
 *        "DATABASE_LIFECYCLE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Failed Indicates that
 *        the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Provisioning
 *        Indicates that the resource is in provisioning state. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_RestoreFailed
 *        Indicates that the resource is in restore failed state. (Value:
 *        "RESTORE_FAILED")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Terminated Indicates
 *        that the resource is in terminated state. (Value: "TERMINATED")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Terminating Indicates
 *        that the resource is in terminating state. (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Updating Indicates
 *        that the resource is in updating state. (Value: "UPDATING")
 *    @arg @c kGTLROracleDatabase_DatabaseProperties_State_Upgrading Indicates
 *        that the resource is in upgrading state. (Value: "UPGRADING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Data collection options for diagnostics.
 */
@interface GTLROracleDatabase_DataCollectionOptions : GTLRObject

/**
 *  Optional. Indicates whether diagnostic collection is enabled for the VM
 *  cluster
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diagnosticsEventsEnabled;

/**
 *  Optional. Indicates whether health monitoring is enabled for the VM cluster
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *healthMonitoringEnabled;

/**
 *  Optional. Indicates whether incident logs and trace collection are enabled
 *  for the VM cluster
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *incidentLogsEnabled;

@end


/**
 *  Data collection options for diagnostics.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/DataCollectionOptions
 */
@interface GTLROracleDatabase_DataCollectionOptionsCommon : GTLRObject

/**
 *  Optional. Indicates whether to enable data collection for diagnostics.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDiagnosticsEventsEnabled;

/**
 *  Optional. Indicates whether to enable health monitoring.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isHealthMonitoringEnabled;

/**
 *  Optional. Indicates whether to enable incident logs and trace collection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isIncidentLogsEnabled;

@end


/**
 *  Data collection options for DbSystem.
 */
@interface GTLROracleDatabase_DataCollectionOptionsDbSystem : GTLRObject

/**
 *  Optional. Indicates whether to enable data collection for diagnostics.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDiagnosticsEventsEnabled;

/**
 *  Optional. Indicates whether to enable incident logs and trace collection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isIncidentLogsEnabled;

@end


/**
 *  Backup Options for the Database.
 */
@interface GTLROracleDatabase_DbBackupConfig : GTLRObject

/**
 *  Optional. If set to true, enables automatic backups on the database.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoBackupEnabled;

/**
 *  Optional. The day of the week on which the full backup should be performed
 *  on the database. If no value is provided, it will default to Sunday.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_DayOfWeekUnspecified
 *        The day of the week is unspecified. (Value: "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Friday Friday
 *        (Value: "FRIDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Monday Monday
 *        (Value: "MONDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Saturday
 *        Saturday (Value: "SATURDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Sunday Sunday
 *        (Value: "SUNDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Thursday
 *        Thursday (Value: "THURSDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Tuesday
 *        Tuesday (Value: "TUESDAY")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupDay_Wednesday
 *        Wednesday (Value: "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *autoFullBackupDay;

/**
 *  Optional. The window in which the full backup should be performed on the
 *  database. If no value is provided, the default is anytime.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_BackupWindowUnspecified
 *        Default unspecified value. (Value: "BACKUP_WINDOW_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotEight
 *        2:00 PM - 4:00 PM (Value: "SLOT_EIGHT")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotEleven
 *        8:00 PM - 10:00 PM (Value: "SLOT_ELEVEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotFive
 *        8:00 AM - 10:00 AM (Value: "SLOT_FIVE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotFour
 *        6:00 AM - 8:00 AM (Value: "SLOT_FOUR")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotNine
 *        4:00 PM - 6:00 PM (Value: "SLOT_NINE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotOne
 *        12:00 AM - 2:00 AM (Value: "SLOT_ONE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotSeven
 *        12:00 PM - 2:00 PM (Value: "SLOT_SEVEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotSix
 *        10:00 AM - 12:00 PM (Value: "SLOT_SIX")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTen
 *        6:00 PM - 8:00 PM (Value: "SLOT_TEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotThree
 *        4:00 AM - 6:00 AM (Value: "SLOT_THREE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTwelve
 *        10:00 PM - 12:00 AM (Value: "SLOT_TWELVE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoFullBackupWindow_SlotTwo
 *        2:00 AM - 4:00 AM (Value: "SLOT_TWO")
 */
@property(nonatomic, copy, nullable) NSString *autoFullBackupWindow;

/**
 *  Optional. The window in which the incremental backup should be performed on
 *  the database. If no value is provided, the default is anytime except the
 *  auto full backup day.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_BackupWindowUnspecified
 *        Default unspecified value. (Value: "BACKUP_WINDOW_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotEight
 *        2:00 PM - 4:00 PM (Value: "SLOT_EIGHT")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotEleven
 *        8:00 PM - 10:00 PM (Value: "SLOT_ELEVEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotFive
 *        8:00 AM - 10:00 AM (Value: "SLOT_FIVE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotFour
 *        6:00 AM - 8:00 AM (Value: "SLOT_FOUR")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotNine
 *        4:00 PM - 6:00 PM (Value: "SLOT_NINE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotOne
 *        12:00 AM - 2:00 AM (Value: "SLOT_ONE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotSeven
 *        12:00 PM - 2:00 PM (Value: "SLOT_SEVEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotSix
 *        10:00 AM - 12:00 PM (Value: "SLOT_SIX")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTen
 *        6:00 PM - 8:00 PM (Value: "SLOT_TEN")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotThree
 *        4:00 AM - 6:00 AM (Value: "SLOT_THREE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTwelve
 *        10:00 PM - 12:00 AM (Value: "SLOT_TWELVE")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_AutoIncrementalBackupWindow_SlotTwo
 *        2:00 AM - 4:00 AM (Value: "SLOT_TWO")
 */
@property(nonatomic, copy, nullable) NSString *autoIncrementalBackupWindow;

/**
 *  Optional. This defines when the backups will be deleted after Database
 *  termination.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_BackupDeletionPolicyUnspecified
 *        Default unspecified value. (Value:
 *        "BACKUP_DELETION_POLICY_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_DeleteAfterRetentionPeriod
 *        Keeps the backups as per the policy defined for database backups.
 *        (Value: "DELETE_AFTER_RETENTION_PERIOD")
 *    @arg @c kGTLROracleDatabase_DbBackupConfig_BackupDeletionPolicy_DeleteImmediately
 *        Keeps the backup for predefined time i.e. 72 hours and then delete
 *        permanently. (Value: "DELETE_IMMEDIATELY")
 */
@property(nonatomic, copy, nullable) NSString *backupDeletionPolicy;

/** Optional. Details of the database backup destinations. */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_BackupDestinationDetails *> *backupDestinationDetails;

/**
 *  Optional. The number of days an automatic backup is retained before being
 *  automatically deleted. This value determines the earliest point in time to
 *  which a database can be restored. Min: 1, Max: 60.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retentionPeriodDays;

@end


/**
 *  Details of the Database Home resource.
 */
@interface GTLROracleDatabase_DbHome : GTLRObject

/** Required. The Database resource. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Database *database;

/**
 *  Required. A valid Oracle Database version. For a list of supported versions,
 *  use the ListDbVersions operation.
 */
@property(nonatomic, copy, nullable) NSString *dbVersion;

/**
 *  Optional. The display name for the Database Home. The name does not have to
 *  be unique within your project.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Whether unified auditing is enabled for the Database Home.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isUnifiedAuditingEnabled;

@end


/**
 *  Details of the database node resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbNode/
 */
@interface GTLROracleDatabase_DbNode : GTLRObject

/**
 *  Identifier. The name of the database node resource in the following format:
 *  projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}/dbNodes/{db_node}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Various properties of the database node. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbNodeProperties *properties;

@end


/**
 *  Various properties and settings associated with Db node.
 */
@interface GTLROracleDatabase_DbNodeProperties : GTLRObject

/** Output only. The date and time that the database node was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Local storage per database node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dbNodeStorageSizeGb;

/** Optional. Database server OCID. */
@property(nonatomic, copy, nullable) NSString *dbServerOcid;

/** Optional. DNS */
@property(nonatomic, copy, nullable) NSString *hostname;

/**
 *  Memory allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/** Output only. OCID of database node. */
@property(nonatomic, copy, nullable) NSString *ocid;

/**
 *  Optional. OCPU count per database node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ocpuCount;

/**
 *  Output only. State of the database node.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Available Indicates
 *        that the resource is in available state. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Failed Indicates that
 *        the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Provisioning Indicates
 *        that the resource is in provisioning state. (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Starting Indicates that
 *        the resource is in starting state. (Value: "STARTING")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Stopped Indicates that
 *        the resource is in stopped state. (Value: "STOPPED")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Stopping Indicates that
 *        the resource is in stopping state. (Value: "STOPPING")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Terminated Indicates
 *        that the resource is in terminated state. (Value: "TERMINATED")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Terminating Indicates
 *        that the resource is in terminating state. (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_DbNodeProperties_State_Updating Indicates that
 *        the resource is in updating state. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Total CPU core count of the database node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCpuCoreCount;

@end


/**
 *  Details of the database server resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbServer/
 */
@interface GTLROracleDatabase_DbServer : GTLRObject

/** Optional. User friendly name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Identifier. The name of the database server resource with the format:
 *  projects/{project}/locations/{location}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}/dbServers/{db_server}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Various properties of the database server. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbServerProperties *properties;

@end


/**
 *  Various properties and settings associated with Exadata database server.
 */
@interface GTLROracleDatabase_DbServerProperties : GTLRObject

/**
 *  Output only. OCID of database nodes associated with the database server.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dbNodeIds;

/**
 *  Optional. Local storage per VM.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dbNodeStorageSizeGb;

/**
 *  Optional. Maximum local storage per VM.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDbNodeStorageSizeGb;

/**
 *  Optional. Maximum memory allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxMemorySizeGb;

/**
 *  Optional. Maximum OCPU count per database.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxOcpuCount;

/**
 *  Optional. Memory allocated in GBs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/** Output only. OCID of database server. */
@property(nonatomic, copy, nullable) NSString *ocid;

/**
 *  Optional. OCPU count per database.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ocpuCount;

/**
 *  Output only. State of the database server.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_Available Indicates
 *        that the resource is in available state. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_Creating Indicates
 *        that the resource is in creating state. (Value: "CREATING")
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_Deleted Indicates
 *        that the resource is in deleted state. (Value: "DELETED")
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_Deleting Indicates
 *        that the resource is in deleting state. (Value: "DELETING")
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_StateUnspecified
 *        Default unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbServerProperties_State_Unavailable Indicates
 *        that the resource is in unavailable state. (Value: "UNAVAILABLE")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional. Vm count per database.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vmCount;

@end


/**
 *  Details of the DbSystem (BaseDB) resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbSystem/
 */
@interface GTLROracleDatabase_DbSystem : GTLRObject

/** Output only. The date and time that the DbSystem was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The display name for the System db. The name does not have to be
 *  unique within your project.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The ID of the subscription entitlement associated with the
 *  DbSystem
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Optional. The GCP Oracle zone where Oracle DbSystem is hosted. Example:
 *  us-east4-b-r2. If not specified, the system will pick a zone based on
 *  availability.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/** Optional. The labels or tags associated with the DbSystem. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbSystem_Labels *labels;

/**
 *  Identifier. The name of the DbSystem resource in the following format:
 *  projects/{project}/locations/{region}/dbSystems/{db_system}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. HTTPS link to OCI resources exposed to Customer via UI
 *  Interface.
 */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/**
 *  Optional. The name of the OdbNetwork associated with the DbSystem. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network} It is
 *  optional but if specified, this should match the parent ODBNetwork of the
 *  OdbSubnet.
 */
@property(nonatomic, copy, nullable) NSString *odbNetwork;

/**
 *  Required. The name of the OdbSubnet associated with the DbSystem for IP
 *  allocation. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *odbSubnet;

/** Optional. The properties of the DbSystem. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbSystemProperties *properties;

@end


/**
 *  Optional. The labels or tags associated with the DbSystem.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_DbSystem_Labels : GTLRObject
@end


/**
 *  Summary of the DbSystem initial storage size.
 */
@interface GTLROracleDatabase_DbSystemInitialStorageSize : GTLRObject

/** Output only. The name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The properties of the DbSystem initial storage size summary.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbSystemInitialStorageSizeProperties *properties;

@end


/**
 *  The properties of a DbSystem initial storage size summary.
 */
@interface GTLROracleDatabase_DbSystemInitialStorageSizeProperties : GTLRObject

/**
 *  Output only. List of storage disk details available for launches from
 *  backup.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_StorageSizeDetails *> *launchFromBackupStorageSizeDetails;

/**
 *  Output only. VM shape platform type
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_ShapeType_ShapeTypeUnspecified
 *        Unspecified shape type. (Value: "SHAPE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_ShapeType_StandardX86
 *        Standard X86. (Value: "STANDARD_X86")
 */
@property(nonatomic, copy, nullable) NSString *shapeType;

/**
 *  Output only. The storage option used in DB system.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_Asm
 *        Automatic Storage Management. (Value: "ASM")
 *    @arg @c kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_Lvm
 *        Logical Volume Management. (Value: "LVM")
 *    @arg @c kGTLROracleDatabase_DbSystemInitialStorageSizeProperties_StorageManagement_StorageManagementUnspecified
 *        Unspecified storage management. (Value:
 *        "STORAGE_MANAGEMENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *storageManagement;

/** Output only. List of storage disk details. */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_StorageSizeDetails *> *storageSizeDetails;

@end


/**
 *  Details of the DbSystem Options.
 */
@interface GTLROracleDatabase_DbSystemOptions : GTLRObject

/**
 *  Optional. The storage option used in DB system.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemOptions_StorageManagement_Asm
 *        Automatic storage management. (Value: "ASM")
 *    @arg @c kGTLROracleDatabase_DbSystemOptions_StorageManagement_Lvm Logical
 *        Volume management. (Value: "LVM")
 *    @arg @c kGTLROracleDatabase_DbSystemOptions_StorageManagement_StorageManagementUnspecified
 *        The storage management is unspecified. (Value:
 *        "STORAGE_MANAGEMENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *storageManagement;

@end


/**
 *  The properties of a DbSystem.
 */
@interface GTLROracleDatabase_DbSystemProperties : GTLRObject

/**
 *  Required. The number of CPU cores to enable for the DbSystem.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *computeCount;

/**
 *  Optional. The compute model of the DbSystem.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_ComputeModel_ComputeModelUnspecified
 *        The compute model is unspecified. (Value: "COMPUTE_MODEL_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_ComputeModel_Ecpu The
 *        compute model is virtual. (Value: "ECPU")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_ComputeModel_Ocpu The
 *        compute model is physical. (Value: "OCPU")
 */
@property(nonatomic, copy, nullable) NSString *computeModel;

/**
 *  Required. The database edition of the DbSystem.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_DbSystemDatabaseEditionUnspecified
 *        The database edition is unspecified. (Value:
 *        "DB_SYSTEM_DATABASE_EDITION_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_EnterpriseEdition
 *        The database edition is Enterprise. (Value: "ENTERPRISE_EDITION")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_EnterpriseEditionHighPerformance
 *        The database edition is Enterprise Edition. (Value:
 *        "ENTERPRISE_EDITION_HIGH_PERFORMANCE")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_DatabaseEdition_StandardEdition
 *        The database edition is Standard. (Value: "STANDARD_EDITION")
 */
@property(nonatomic, copy, nullable) NSString *databaseEdition;

/** Optional. Data collection options for diagnostics. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DataCollectionOptionsDbSystem *dataCollectionOptions;

/**
 *  Optional. The data storage size in GB that is currently available to
 *  DbSystems.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeGb;

/** Optional. Details for creating a Database Home. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbHome *dbHome;

/** Optional. The options for the DbSystem. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbSystemOptions *dbSystemOptions;

/** Optional. The host domain name of the DbSystem. */
@property(nonatomic, copy, nullable) NSString *domain;

/** Output only. The hostname of the DbSystem. */
@property(nonatomic, copy, nullable) NSString *hostname;

/** Optional. Prefix for DB System host names. */
@property(nonatomic, copy, nullable) NSString *hostnamePrefix;

/**
 *  Required. The initial data storage size in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *initialDataStorageSizeGb;

/**
 *  Required. The license model of the DbSystem.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LicenseModel_BringYourOwnLicense
 *        The license model is bring your own license. (Value:
 *        "BRING_YOUR_OWN_LICENSE")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LicenseModel_LicenseIncluded
 *        The license model is included. (Value: "LICENSE_INCLUDED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LicenseModel_LicenseModelUnspecified
 *        The license model is unspecified. (Value: "LICENSE_MODEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *licenseModel;

/**
 *  Output only. State of the DbSystem.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Available
 *        Indicates that the resource is in available state. (Value:
 *        "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_DbSystemLifecycleStateUnspecified
 *        Default unspecified value. (Value:
 *        "DB_SYSTEM_LIFECYCLE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Failed
 *        Indicates that the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_MaintenanceInProgress
 *        Indicates that the resource is in maintenance in progress state.
 *        (Value: "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Migrated
 *        Indicates that the resource has been migrated. (Value: "MIGRATED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_NeedsAttention
 *        Indicates that the resource needs attention. (Value:
 *        "NEEDS_ATTENTION")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Provisioning
 *        Indicates that the resource is in provisioning state. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Terminated
 *        Indicates that the resource is in terminated state. (Value:
 *        "TERMINATED")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Terminating
 *        Indicates that the resource is in terminating state. (Value:
 *        "TERMINATING")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Updating
 *        Indicates that the resource is in updating state. (Value: "UPDATING")
 *    @arg @c kGTLROracleDatabase_DbSystemProperties_LifecycleState_Upgrading
 *        Indicates that the resource is upgrading. (Value: "UPGRADING")
 */
@property(nonatomic, copy, nullable) NSString *lifecycleState;

/**
 *  Optional. The memory size in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/**
 *  Optional. The number of nodes in the DbSystem.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

/** Output only. OCID of the DbSystem. */
@property(nonatomic, copy, nullable) NSString *ocid;

/** Optional. The private IP address of the DbSystem. */
@property(nonatomic, copy, nullable) NSString *privateIp;

/**
 *  Optional. The reco/redo storage size in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recoStorageSizeGb;

/** Required. Shape of DB System. */
@property(nonatomic, copy, nullable) NSString *shape;

/** Required. SSH public keys to be stored with the DbSystem. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sshPublicKeys;

/** Optional. Time zone of the DbSystem. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeZone *timeZone;

@end


/**
 *  Details of the Database System Shapes resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbSystemShapeSummary/
 */
@interface GTLROracleDatabase_DbSystemShape : GTLRObject

/**
 *  Optional. Number of cores per node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableCoreCountPerNode;

/**
 *  Optional. Storage per storage server in terabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableDataStorageTb;

/**
 *  Optional. Memory per database server node in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableMemoryPerNodeGb;

/**
 *  Optional. Maximum number of database servers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNodeCount;

/**
 *  Optional. Maximum number of storage servers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxStorageCount;

/**
 *  Optional. Minimum core count per node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minCoreCountPerNode;

/**
 *  Optional. Minimum node storage per database server in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minDbNodeStoragePerNodeGb;

/**
 *  Optional. Minimum memory per node in gigabytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minMemoryPerNodeGb;

/**
 *  Optional. Minimum number of database servers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodeCount;

/**
 *  Optional. Minimum number of storage servers.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minStorageCount;

/**
 *  Identifier. The name of the Database System Shape resource with the format:
 *  projects/{project}/locations/{region}/dbSystemShapes/{db_system_shape}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. shape */
@property(nonatomic, copy, nullable) NSString *shape;

@end


/**
 *  A valid Oracle Database version.
 */
@interface GTLROracleDatabase_DbVersion : GTLRObject

/**
 *  Output only. The name of the DbVersion resource in the following format:
 *  projects/{project}/locations/{region}/dbVersions/{db_version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The properties of the DbVersion. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DbVersionProperties *properties;

@end


/**
 *  The properties of a DbVersion.
 */
@interface GTLROracleDatabase_DbVersionProperties : GTLRObject

/**
 *  Output only. True if this version of the Oracle Database software is the
 *  latest version for a release.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isLatestForMajorVersion;

/**
 *  Output only. True if this version of the Oracle Database software is the
 *  preview version.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPreviewDbVersion;

/**
 *  Output only. True if this version of the Oracle Database software is
 *  supported for Upgrade.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isUpgradeSupported;

/**
 *  Output only. True if this version of the Oracle Database software supports
 *  pluggable databases.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportsPdb;

/** Output only. A valid Oracle Database version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Wrapper message for the value of a defined tag.
 */
@interface GTLROracleDatabase_DefinedTagValue : GTLRObject

/** The tags within the namespace. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DefinedTagValue_Tags *tags;

@end


/**
 *  The tags within the namespace.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_DefinedTagValue_Tags : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLROracleDatabase_Empty : GTLRObject
@end


/**
 *  The encryption key used to encrypt the Autonomous Database.
 */
@interface GTLROracleDatabase_EncryptionKey : GTLRObject

/**
 *  Optional. The KMS key used to encrypt the Autonomous Database. This field is
 *  required if the provider is GOOGLE_MANAGED. The name of the KMS key resource
 *  in the following format:
 *  `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  Optional. The provider of the encryption key.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_EncryptionKey_Provider_GoogleManaged Google
 *        Managed KMS key, if selected, please provide the KMS key name. (Value:
 *        "GOOGLE_MANAGED")
 *    @arg @c kGTLROracleDatabase_EncryptionKey_Provider_OracleManaged Oracle
 *        Managed. (Value: "ORACLE_MANAGED")
 *    @arg @c kGTLROracleDatabase_EncryptionKey_Provider_ProviderUnspecified
 *        Default unspecified value. (Value: "PROVIDER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *provider;

@end


/**
 *  The history of the encryption keys used to encrypt the Autonomous Database.
 */
@interface GTLROracleDatabase_EncryptionKeyHistoryEntry : GTLRObject

/**
 *  Output only. The date and time when the encryption key was activated on the
 *  Autonomous Database..
 */
@property(nonatomic, strong, nullable) GTLRDateTime *activationTime;

/**
 *  Output only. The encryption key used to encrypt the Autonomous Database.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_EncryptionKey *encryptionKey;

@end


/**
 *  Details of the Entitlement resource.
 */
@interface GTLROracleDatabase_Entitlement : GTLRObject

/** Details of the OCI Cloud Account. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_CloudAccountDetails *cloudAccountDetails;

/** Output only. Google Cloud Marketplace order ID (aka entitlement ID) */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Identifier. The name of the Entitlement resource with the format:
 *  projects/{project}/locations/{region}/entitlements/{entitlement}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Entitlement State.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_Entitlement_State_AccountNotActive Account is
 *        linked but not active. (Value: "ACCOUNT_NOT_ACTIVE")
 *    @arg @c kGTLROracleDatabase_Entitlement_State_AccountNotLinked Account not
 *        linked. (Value: "ACCOUNT_NOT_LINKED")
 *    @arg @c kGTLROracleDatabase_Entitlement_State_AccountSuspended Account is
 *        suspended. (Value: "ACCOUNT_SUSPENDED")
 *    @arg @c kGTLROracleDatabase_Entitlement_State_Active Entitlement and
 *        Account are active. (Value: "ACTIVE")
 *    @arg @c kGTLROracleDatabase_Entitlement_State_NotApprovedInPrivateMarketplace
 *        Entitlement is not approved in private marketplace. (Value:
 *        "NOT_APPROVED_IN_PRIVATE_MARKETPLACE")
 *    @arg @c kGTLROracleDatabase_Entitlement_State_StateUnspecified Default
 *        unspecified value. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  ExadbVmCluster represents a cluster of VMs that are used to run Exadata
 *  workloads.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/ExadbVmCluster/
 */
@interface GTLROracleDatabase_ExadbVmCluster : GTLRObject

/**
 *  Required. Immutable. The name of the backup OdbSubnet associated with the
 *  ExadbVmCluster. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *backupOdbSubnet;

/** Output only. The date and time that the ExadbVmCluster was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. Immutable. The display name for the ExadbVmCluster. The name does
 *  not have to be unique within your project. The name must be 1-255 characters
 *  long and can only contain alphanumeric characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The ID of the subscription entitlement associated with the
 *  ExadbVmCluster.
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Output only. Immutable. The GCP Oracle zone where Oracle ExadbVmCluster is
 *  hosted. Example: us-east4-b-r2. During creation, the system will pick the
 *  zone assigned to the ExascaleDbStorageVault.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/** Optional. The labels or tags associated with the ExadbVmCluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExadbVmCluster_Labels *labels;

/**
 *  Identifier. The name of the ExadbVmCluster resource in the following format:
 *  projects/{project}/locations/{region}/exadbVmClusters/{exadb_vm_cluster}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Immutable. The name of the OdbNetwork associated with the
 *  ExadbVmCluster. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network} It is
 *  optional but if specified, this should match the parent ODBNetwork of the
 *  OdbSubnet.
 */
@property(nonatomic, copy, nullable) NSString *odbNetwork;

/**
 *  Required. Immutable. The name of the OdbSubnet associated with the
 *  ExadbVmCluster for IP allocation. Format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *odbSubnet;

/** Required. The properties of the ExadbVmCluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExadbVmClusterProperties *properties;

@end


/**
 *  Optional. The labels or tags associated with the ExadbVmCluster.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_ExadbVmCluster_Labels : GTLRObject
@end


/**
 *  The properties of an ExadbVmCluster.
 */
@interface GTLROracleDatabase_ExadbVmClusterProperties : GTLRObject

/**
 *  Optional. Immutable. The number of additional ECPUs per node for an Exadata
 *  VM cluster on exascale infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *additionalEcpuCountPerNode;

/**
 *  Optional. Immutable. The cluster name for Exascale vm cluster. The cluster
 *  name must begin with an alphabetic character and may contain hyphens(-) but
 *  can not contain underscores(_). It should be not more than 11 characters and
 *  is not case sensitive. OCI Cluster name.
 */
@property(nonatomic, copy, nullable) NSString *clusterName;

/**
 *  Optional. Immutable. Indicates user preference for data collection options.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DataCollectionOptionsCommon *dataCollectionOptions;

/**
 *  Required. Immutable. The number of ECPUs enabled per node for an exadata vm
 *  cluster on exascale infrastructure.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabledEcpuCountPerNode;

/**
 *  Required. Immutable. The name of ExascaleDbStorageVault associated with the
 *  ExadbVmCluster. It can refer to an existing ExascaleDbStorageVault. Or a new
 *  one can be created during the ExadbVmCluster creation (requires
 *  storage_vault_properties to be set). Format:
 *  projects/{project}/locations/{location}/exascaleDbStorageVaults/{exascale_db_storage_vault}
 */
@property(nonatomic, copy, nullable) NSString *exascaleDbStorageVault;

/** Output only. The Oracle Grid Infrastructure (GI) software version. */
@property(nonatomic, copy, nullable) NSString *giVersion;

/** Required. Immutable. Grid Infrastructure Version. */
@property(nonatomic, copy, nullable) NSString *gridImageId;

/** Output only. The hostname of the ExadbVmCluster. */
@property(nonatomic, copy, nullable) NSString *hostname;

/** Required. Immutable. Prefix for VM cluster host names. */
@property(nonatomic, copy, nullable) NSString *hostnamePrefix;

/**
 *  Optional. Immutable. The license type of the ExadbVmCluster.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_BringYourOwnLicense
 *        Bring your own license. (Value: "BRING_YOUR_OWN_LICENSE")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_LicenseIncluded
 *        Default is license included. (Value: "LICENSE_INCLUDED")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LicenseModel_LicenseModelUnspecified
 *        Unspecified. (Value: "LICENSE_MODEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *licenseModel;

/**
 *  Output only. State of the cluster.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Available
 *        Indicates that the resource is in available state. (Value:
 *        "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_ExadbVmClusterLifecycleStateUnspecified
 *        Default unspecified value. (Value:
 *        "EXADB_VM_CLUSTER_LIFECYCLE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Failed
 *        Indicates that the resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_MaintenanceInProgress
 *        Indicates that the resource is in maintenance in progress state.
 *        (Value: "MAINTENANCE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Provisioning
 *        Indicates that the resource is in provisioning state. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Terminated
 *        Indicates that the resource is in terminated state. (Value:
 *        "TERMINATED")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Terminating
 *        Indicates that the resource is in terminating state. (Value:
 *        "TERMINATING")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_LifecycleState_Updating
 *        Indicates that the resource is in updating state. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *lifecycleState;

/**
 *  Output only. Memory per VM (GB) (Read-only): Shows the amount of memory
 *  allocated to each VM. Memory is calculated based on 2.75 GB per Total ECPUs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memorySizeGb;

/**
 *  Required. The number of nodes/VMs in the ExadbVmCluster.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

/** Output only. Deep link to the OCI console to view this resource. */
@property(nonatomic, copy, nullable) NSString *ociUri;

/**
 *  Optional. Immutable. SCAN listener port - TCP
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *scanListenerPortTcp;

/**
 *  Required. Immutable. The shape attribute of the VM cluster. The type of
 *  Exascale storage used for Exadata VM cluster. The default is SMART_STORAGE
 *  which supports Oracle Database 23ai and later
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_BlockStorage
 *        Indicates that the resource is in block storage. (Value:
 *        "BLOCK_STORAGE")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_ShapeAttributeUnspecified
 *        Default unspecified value. (Value: "SHAPE_ATTRIBUTE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_ExadbVmClusterProperties_ShapeAttribute_SmartStorage
 *        Indicates that the resource is in smart storage. (Value:
 *        "SMART_STORAGE")
 */
@property(nonatomic, copy, nullable) NSString *shapeAttribute;

/** Required. Immutable. The SSH public keys for the ExadbVmCluster. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sshPublicKeys;

/** Optional. Immutable. The time zone of the ExadbVmCluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeZone *timeZone;

/** Required. Immutable. Total storage details for the ExadbVmCluster. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExadbVmClusterStorageDetails *vmFileSystemStorage;

@end


/**
 *  The storage allocation for the exadbvmcluster, in gigabytes (GB).
 */
@interface GTLROracleDatabase_ExadbVmClusterStorageDetails : GTLRObject

/**
 *  Required. The storage allocation for the exadbvmcluster per node, in
 *  gigabytes (GB). This field is used to calculate the total storage allocation
 *  for the exadbvmcluster.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeInGbsPerNode;

@end


/**
 *  The storage details of the ExascaleDbStorageVault.
 */
@interface GTLROracleDatabase_ExascaleDbStorageDetails : GTLRObject

/**
 *  Output only. The available storage capacity for the ExascaleDbStorageVault,
 *  in gigabytes (GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableSizeGbs;

/**
 *  Required. The total storage allocation for the ExascaleDbStorageVault, in
 *  gigabytes (GB).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSizeGbs;

@end


/**
 *  ExascaleDbStorageVault represents a storage vault exadb vm cluster resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/ExascaleDbStorageVault/
 */
@interface GTLROracleDatabase_ExascaleDbStorageVault : GTLRObject

/**
 *  Output only. The date and time when the ExascaleDbStorageVault was created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The display name for the ExascaleDbStorageVault. The name does not
 *  have to be unique within your project. The name must be 1-255 characters
 *  long and can only contain alphanumeric characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The ID of the subscription entitlement associated with the
 *  ExascaleDbStorageVault.
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Optional. The GCP Oracle zone where Oracle ExascaleDbStorageVault is hosted.
 *  Example: us-east4-b-r2. If not specified, the system will pick a zone based
 *  on availability.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/**
 *  Optional. The labels or tags associated with the ExascaleDbStorageVault.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExascaleDbStorageVault_Labels *labels;

/**
 *  Identifier. The resource name of the ExascaleDbStorageVault. Format:
 *  projects/{project}/locations/{location}/exascaleDbStorageVaults/{exascale_db_storage_vault}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The properties of the ExascaleDbStorageVault. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExascaleDbStorageVaultProperties *properties;

@end


/**
 *  Optional. The labels or tags associated with the ExascaleDbStorageVault.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_ExascaleDbStorageVault_Labels : GTLRObject
@end


/**
 *  The properties of the ExascaleDbStorageVault. next ID: 12
 */
@interface GTLROracleDatabase_ExascaleDbStorageVaultProperties : GTLRObject

/**
 *  Optional. The size of additional flash cache in percentage of high capacity
 *  database storage.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *additionalFlashCachePercent;

/**
 *  Output only. The shape attributes of the VM clusters attached to the
 *  ExascaleDbStorageVault.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *attachedShapeAttributes;

/**
 *  Output only. The shape attributes available for the VM clusters to be
 *  attached to the ExascaleDbStorageVault.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableShapeAttributes;

/**
 *  Optional. The description of the ExascaleDbStorageVault.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Required. The storage details of the ExascaleDbStorageVault. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_ExascaleDbStorageDetails *exascaleDbStorageDetails;

/** Output only. The OCID for the ExascaleDbStorageVault. */
@property(nonatomic, copy, nullable) NSString *ocid;

/** Output only. Deep link to the OCI console to view this resource. */
@property(nonatomic, copy, nullable) NSString *ociUri;

/**
 *  Output only. The state of the ExascaleDbStorageVault.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Available
 *        The ExascaleDbStorageVault is available. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Failed
 *        The ExascaleDbStorageVault has failed. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Provisioning
 *        The ExascaleDbStorageVault is being provisioned. (Value:
 *        "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_StateUnspecified
 *        The state of the ExascaleDbStorageVault is unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Terminated
 *        The ExascaleDbStorageVault has been deleted. (Value: "TERMINATED")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Terminating
 *        The ExascaleDbStorageVault is being deleted. (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_ExascaleDbStorageVaultProperties_State_Updating
 *        The ExascaleDbStorageVault is being updated. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The time zone of the ExascaleDbStorageVault. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeZone *timeZone;

/**
 *  Output only. The number of VM clusters associated with the
 *  ExascaleDbStorageVault.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vmClusterCount;

/**
 *  Output only. The list of VM cluster OCIDs associated with the
 *  ExascaleDbStorageVault.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *vmClusterIds;

@end


/**
 *  The request for `OracleDatabase.FailoverAutonomousDatabase`.
 */
@interface GTLROracleDatabase_FailoverAutonomousDatabaseRequest : GTLRObject

/** Required. The peer database name to fail over to. */
@property(nonatomic, copy, nullable) NSString *peerAutonomousDatabase;

@end


/**
 *  The request for `AutonomousDatabase.GenerateWallet`.
 */
@interface GTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest : GTLRObject

/**
 *  Optional. True when requesting regional connection strings in PDB connect
 *  info, applicable to cross-region Data Guard only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRegional;

/**
 *  Required. The password used to encrypt the keys inside the wallet. The
 *  password must be a minimum of 8 characters.
 */
@property(nonatomic, copy, nullable) NSString *password;

/**
 *  Optional. The type of wallet generation for the Autonomous Database. The
 *  default value is SINGLE.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_All
 *        Used to generate wallet for all databases in the region. (Value:
 *        "ALL")
 *    @arg @c kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_GenerateTypeUnspecified
 *        Default unspecified value. (Value: "GENERATE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_GenerateAutonomousDatabaseWalletRequest_Type_Single
 *        Used to generate wallet for a single database. (Value: "SINGLE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The response for `AutonomousDatabase.GenerateWallet`.
 */
@interface GTLROracleDatabase_GenerateAutonomousDatabaseWalletResponse : GTLRObject

/**
 *  Output only. The base64 encoded wallet files.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *archiveContent;

@end


/**
 *  Details of the Oracle Grid Infrastructure (GI) version resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/GiVersionSummary/
 */
@interface GTLROracleDatabase_GiVersion : GTLRObject

/**
 *  Identifier. The name of the Oracle Grid Infrastructure (GI) version resource
 *  with the format:
 *  projects/{project}/locations/{region}/giVersions/{gi_versions}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. version */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  The identity connector details which will allow OCI to securely access the
 *  resources in the customer project.
 */
@interface GTLROracleDatabase_IdentityConnector : GTLRObject

/**
 *  Output only. The connection state of the identity connector.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_IdentityConnector_ConnectionState_Connected
 *        The identity pool connection is connected. (Value: "CONNECTED")
 *    @arg @c kGTLROracleDatabase_IdentityConnector_ConnectionState_ConnectionStateUnspecified
 *        Default unspecified value. (Value: "CONNECTION_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_IdentityConnector_ConnectionState_Disconnected
 *        The identity pool connection is disconnected. (Value: "DISCONNECTED")
 *    @arg @c kGTLROracleDatabase_IdentityConnector_ConnectionState_PartiallyConnected
 *        The identity pool connection is partially connected. (Value:
 *        "PARTIALLY_CONNECTED")
 *    @arg @c kGTLROracleDatabase_IdentityConnector_ConnectionState_Unknown The
 *        identity pool connection is in an unknown state. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *connectionState;

/**
 *  Output only. A google managed service account on which customers can grant
 *  roles to access resources in the customer project. Example:
 *  `p176944527254-55-75119d87fd8f\@gcp-sa-oci.iam.gserviceaccount.com`
 */
@property(nonatomic, copy, nullable) NSString *serviceAgentEmail;

@end


/**
 *  The response for `AutonomousDatabaseBackup.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "autonomousDatabaseBackups" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListAutonomousDatabaseBackupsResponse : GTLRCollectionObject

/**
 *  The list of Autonomous Database Backups.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_AutonomousDatabaseBackup *> *autonomousDatabaseBackups;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `AutonomousDatabaseCharacterSet.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "autonomousDatabaseCharacterSets" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListAutonomousDatabaseCharacterSetsResponse : GTLRCollectionObject

/**
 *  The list of Autonomous Database Character Sets.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_AutonomousDatabaseCharacterSet *> *autonomousDatabaseCharacterSets;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `AutonomousDatabase.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "autonomousDatabases" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListAutonomousDatabasesResponse : GTLRCollectionObject

/**
 *  The list of Autonomous Databases.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_AutonomousDatabase *> *autonomousDatabases;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `AutonomousDbVersion.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "autonomousDbVersions" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListAutonomousDbVersionsResponse : GTLRCollectionObject

/**
 *  The list of Autonomous Database versions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_AutonomousDbVersion *> *autonomousDbVersions;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `CloudExadataInfrastructures.list`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "cloudExadataInfrastructures" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListCloudExadataInfrastructuresResponse : GTLRCollectionObject

/**
 *  The list of Exadata Infrastructures.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_CloudExadataInfrastructure *> *cloudExadataInfrastructures;

/** A token for fetching next page of response. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `CloudVmCluster.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "cloudVmClusters" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLROracleDatabase_ListCloudVmClustersResponse : GTLRCollectionObject

/**
 *  The list of VM Clusters.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_CloudVmCluster *> *cloudVmClusters;

/** A token to fetch the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DatabaseCharacterSet.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "databaseCharacterSets" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListDatabaseCharacterSetsResponse : GTLRCollectionObject

/**
 *  The list of DatabaseCharacterSets.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DatabaseCharacterSet *> *databaseCharacterSets;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `Database.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "databases" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListDatabasesResponse : GTLRCollectionObject

/**
 *  The list of Databases.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_Database *> *databases;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbNode.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbNodes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListDbNodesResponse : GTLRCollectionObject

/**
 *  The list of DB Nodes
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbNode *> *dbNodes;

/** A token identifying a page of results the node should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbServer.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbServers" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListDbServersResponse : GTLRCollectionObject

/**
 *  The list of database servers.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbServer *> *dbServers;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbSystemInitialStorageSizes.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbSystemInitialStorageSizes" property. If returned as the result
 *        of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListDbSystemInitialStorageSizesResponse : GTLRCollectionObject

/**
 *  The list of DbSystemInitialStorageSizes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbSystemInitialStorageSize *> *dbSystemInitialStorageSizes;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbSystemShape.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbSystemShapes" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLROracleDatabase_ListDbSystemShapesResponse : GTLRCollectionObject

/**
 *  The list of Database System shapes.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbSystemShape *> *dbSystemShapes;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbSystem.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbSystems" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListDbSystemsResponse : GTLRCollectionObject

/**
 *  The list of DbSystems.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbSystem *> *dbSystems;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `DbVersions.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "dbVersions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListDbVersionsResponse : GTLRCollectionObject

/**
 *  The list of DbVersions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_DbVersion *> *dbVersions;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `Entitlement.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entitlements" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListEntitlementsResponse : GTLRCollectionObject

/**
 *  The list of Entitlements
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_Entitlement *> *entitlements;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `ExadbVmCluster.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "exadbVmClusters" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLROracleDatabase_ListExadbVmClustersResponse : GTLRCollectionObject

/**
 *  The list of ExadbVmClusters.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_ExadbVmCluster *> *exadbVmClusters;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `ExascaleDbStorageVault.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "exascaleDbStorageVaults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListExascaleDbStorageVaultsResponse : GTLRCollectionObject

/**
 *  The ExascaleDbStorageVaults.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_ExascaleDbStorageVault *> *exascaleDbStorageVaults;

/**
 *  A token identifying a page of results the server should return. If present,
 *  the next page token can be provided to a subsequent
 *  ListExascaleDbStorageVaults call to list the next page. If empty, there are
 *  no more pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `GiVersion.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "giVersions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListGiVersionsResponse : GTLRCollectionObject

/**
 *  The list of Oracle Grid Infrastructure (GI) versions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_GiVersion *> *giVersions;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `MinorVersion.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "minorVersions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListMinorVersionsResponse : GTLRCollectionObject

/**
 *  The list of MinorVersions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_MinorVersion *> *minorVersions;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response for `OdbNetwork.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "odbNetworks" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListOdbNetworksResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of ODB Networks.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_OdbNetwork *> *odbNetworks;

/**
 *  Unreachable locations when listing resources across all locations using
 *  wildcard location '-'.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response for `OdbSubnet.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "odbSubnets" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListOdbSubnetsResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of ODB Subnets.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_OdbSubnet *> *odbSubnets;

/**
 *  Unreachable locations when listing resources across all locations using
 *  wildcard location '-'.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLROracleDatabase_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_Operation *> *operations;

/**
 *  Unordered list. Unreachable resources. Populated when the request sets
 *  `ListOperationsRequest.return_partial_success` and reads across collections
 *  e.g. when attempting to list all resources across all supported locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response for `PluggableDatabase.List`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "pluggableDatabases" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLROracleDatabase_ListPluggableDatabasesResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of PluggableDatabases.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_PluggableDatabase *> *pluggableDatabases;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLROracleDatabase_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLROracleDatabase_Location_Metadata : GTLRObject
@end


/**
 *  Metadata for a given Location.
 */
@interface GTLROracleDatabase_LocationMetadata : GTLRObject

/** Output only. Google Cloud Platform Oracle zones in a location. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gcpOracleZones;

@end


/**
 *  Maintenance window as defined by Oracle.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
 */
@interface GTLROracleDatabase_MaintenanceWindow : GTLRObject

/**
 *  Optional. Determines the amount of time the system will wait before the
 *  start of each database server patching operation. Custom action timeout is
 *  in minutes and valid value is between 15 to 120 (inclusive).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *customActionTimeoutMins;

/** Optional. Days during the week when maintenance should be performed. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *daysOfWeek;

/**
 *  Optional. The window of hours during the day when maintenance should be
 *  performed. The window is a 4 hour slot. Valid values are: 0 - represents
 *  time slot 0:00 - 3:59 UTC 4 - represents time slot 4:00 - 7:59 UTC 8 -
 *  represents time slot 8:00 - 11:59 UTC 12 - represents time slot 12:00 -
 *  15:59 UTC 16 - represents time slot 16:00 - 19:59 UTC 20 - represents time
 *  slot 20:00 - 23:59 UTC
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *hoursOfDay;

/**
 *  Optional. If true, enables the configuration of a custom action timeout
 *  (waiting period) between database server patching operations.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isCustomActionTimeoutEnabled;

/**
 *  Optional. Lead time window allows user to set a lead time to prepare for a
 *  down time. The lead time is in weeks and valid value is between 1 to 4.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *leadTimeWeek;

/** Optional. Months during the year when maintenance should be performed. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *months;

/**
 *  Optional. Cloud CloudExadataInfrastructure node patching method, either
 *  "ROLLING" or "NONROLLING". Default value is ROLLING.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_PatchingMode_NonRolling The
 *        non-rolling maintenance method first updates your storage servers at
 *        the same time, then your database servers at the same time. (Value:
 *        "NON_ROLLING")
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_PatchingMode_PatchingModeUnspecified
 *        Default unspecified value. (Value: "PATCHING_MODE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_PatchingMode_Rolling Updates
 *        the Cloud Exadata database server hosts in a rolling fashion. (Value:
 *        "ROLLING")
 */
@property(nonatomic, copy, nullable) NSString *patchingMode;

/**
 *  Optional. The maintenance window scheduling preference.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_Preference_CustomPreference
 *        Custom preference. (Value: "CUSTOM_PREFERENCE")
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_Preference_MaintenanceWindowPreferenceUnspecified
 *        Default unspecified value. (Value:
 *        "MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_MaintenanceWindow_Preference_NoPreference No
 *        preference. (Value: "NO_PREFERENCE")
 */
@property(nonatomic, copy, nullable) NSString *preference;

/**
 *  Optional. Weeks during the month when maintenance should be performed. Weeks
 *  start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration
 *  of 7 days. Weeks start and end based on calendar dates, not days of the
 *  week.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *weeksOfMonth;

@end


/**
 *  MinorVersion represents a minor version of a GI.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/GiMinorVersionSummary/
 */
@interface GTLROracleDatabase_MinorVersion : GTLRObject

/** Optional. The ID of the Grid Image. */
@property(nonatomic, copy, nullable) NSString *gridImageId;

/**
 *  Identifier. The name of the MinorVersion resource with the format:
 *  projects/{project}/locations/{region}/giVersions/{gi_version}/minorVersions/{minor_version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. The valid Oracle grid infrastructure software version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Represents OdbNetwork resource.
 */
@interface GTLROracleDatabase_OdbNetwork : GTLRObject

/** Output only. The date and time that the OdbNetwork was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The ID of the subscription entitlement associated with the
 *  OdbNetwork.
 */
@property(nonatomic, copy, nullable) NSString *entitlementId;

/**
 *  Optional. The GCP Oracle zone where OdbNetwork is hosted. Example:
 *  us-east4-b-r2. If not specified, the system will pick a zone based on
 *  availability.
 */
@property(nonatomic, copy, nullable) NSString *gcpOracleZone;

/** Optional. Labels or tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_OdbNetwork_Labels *labels;

/**
 *  Identifier. The name of the OdbNetwork resource in the following format:
 *  projects/{project}/locations/{region}/odbNetworks/{odb_network}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The name of the VPC network in the following format:
 *  projects/{project}/global/networks/{network}
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Output only. State of the ODB Network.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_OdbNetwork_State_Available Indicates that the
 *        resource is in available state. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_OdbNetwork_State_Failed Indicates that the
 *        resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_OdbNetwork_State_Provisioning Indicates that
 *        the resource is in provisioning state. (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_OdbNetwork_State_StateUnspecified Default
 *        unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_OdbNetwork_State_Terminating Indicates that
 *        the resource is in terminating state. (Value: "TERMINATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Optional. Labels or tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_OdbNetwork_Labels : GTLRObject
@end


/**
 *  Represents OdbSubnet resource.
 */
@interface GTLROracleDatabase_OdbSubnet : GTLRObject

/** Required. The CIDR range of the subnet. */
@property(nonatomic, copy, nullable) NSString *cidrRange;

/** Output only. The date and time that the OdbNetwork was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. Labels or tags associated with the resource. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_OdbSubnet_Labels *labels;

/**
 *  Identifier. The name of the OdbSubnet resource in the following format:
 *  projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Purpose of the subnet.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_OdbSubnet_Purpose_BackupSubnet Subnet to be
 *        used for backup. (Value: "BACKUP_SUBNET")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_Purpose_ClientSubnet Subnet to be
 *        used for client connections. (Value: "CLIENT_SUBNET")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_Purpose_PurposeUnspecified Default
 *        unspecified value. (Value: "PURPOSE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

/**
 *  Output only. State of the ODB Subnet.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_OdbSubnet_State_Available Indicates that the
 *        resource is in available state. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_State_Failed Indicates that the
 *        resource is in failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_State_Provisioning Indicates that
 *        the resource is in provisioning state. (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_State_StateUnspecified Default
 *        unspecified value. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_OdbSubnet_State_Terminating Indicates that the
 *        resource is in terminating state. (Value: "TERMINATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Optional. Labels or tags associated with the resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_OdbSubnet_Labels : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLROracleDatabase_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLROracleDatabase_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLROracleDatabase_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLROracleDatabase_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. An estimated percentage of the operation that has been
 *  completed at a given moment of time, between 0 and 100.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentComplete;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have been cancelled successfully have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. The status of the operation. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The PluggableDatabase resource.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/PluggableDatabase/
 */
@interface GTLROracleDatabase_PluggableDatabase : GTLRObject

/** Output only. The date and time that the PluggableDatabase was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Identifier. The name of the PluggableDatabase resource in the following
 *  format:
 *  projects/{project}/locations/{region}/pluggableDatabases/{pluggable_database}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. HTTPS link to OCI resources exposed to Customer via UI
 *  Interface.
 */
@property(nonatomic, copy, nullable) NSString *ociUrl;

/** Optional. The properties of the PluggableDatabase. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_PluggableDatabaseProperties *properties;

@end


/**
 *  The connection strings used to connect to the Oracle Database.
 */
@interface GTLROracleDatabase_PluggableDatabaseConnectionStrings : GTLRObject

/**
 *  Optional. All connection strings to use to connect to the pluggable
 *  database.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_PluggableDatabaseConnectionStrings_AllConnectionStrings *allConnectionStrings;

/**
 *  Optional. The default connection string to use to connect to the pluggable
 *  database.
 */
@property(nonatomic, copy, nullable) NSString *pdbDefault;

/**
 *  Optional. The default connection string to use to connect to the pluggable
 *  database using IP.
 */
@property(nonatomic, copy, nullable) NSString *pdbIpDefault;

@end


/**
 *  Optional. All connection strings to use to connect to the pluggable
 *  database.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_PluggableDatabaseConnectionStrings_AllConnectionStrings : GTLRObject
@end


/**
 *  The Pluggable Database Node Level Details.
 */
@interface GTLROracleDatabase_PluggableDatabaseNodeLevelDetails : GTLRObject

/** Required. The Node name of the Database home. */
@property(nonatomic, copy, nullable) NSString *nodeName;

/**
 *  Required. The mode that the pluggable database is in to open it.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_Migrate
 *        The pluggable database is migrated. (Value: "MIGRATE")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_Mounted
 *        The pluggable database is mounted. (Value: "MOUNTED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_PluggableDatabaseOpenModeUnspecified
 *        The open mode is unspecified. (Value:
 *        "PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_ReadOnly
 *        The pluggable database is opened in read-only mode. (Value:
 *        "READ_ONLY")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseNodeLevelDetails_OpenMode_ReadWrite
 *        The pluggable database is opened in read-write mode. (Value:
 *        "READ_WRITE")
 */
@property(nonatomic, copy, nullable) NSString *openMode;

/** Required. The OCID of the Pluggable Database. */
@property(nonatomic, copy, nullable) NSString *pluggableDatabaseId;

@end


/**
 *  The properties of a PluggableDatabase.
 */
@interface GTLROracleDatabase_PluggableDatabaseProperties : GTLRObject

/** Required. The OCID of the compartment. */
@property(nonatomic, copy, nullable) NSString *compartmentId;

/**
 *  Optional. The Connection strings used to connect to the Oracle Database.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_PluggableDatabaseConnectionStrings *connectionStrings;

/** Required. The OCID of the CDB. */
@property(nonatomic, copy, nullable) NSString *containerDatabaseOcid;

/** Output only. The configuration of the Database Management service. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_DatabaseManagementConfig *databaseManagementConfig;

/**
 *  Optional. Defined tags for this resource. Each key is predefined and scoped
 *  to a namespace.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_PluggableDatabaseProperties_DefinedTags *definedTags;

/**
 *  Optional. Free-form tags for this resource. Each tag is a simple key-value
 *  pair with no predefined name, type, or namespace.
 */
@property(nonatomic, strong, nullable) GTLROracleDatabase_PluggableDatabaseProperties_FreeformTags *freeformTags;

/**
 *  Optional. The restricted mode of the pluggable database. If a pluggable
 *  database is opened in restricted mode, the user needs both create a session
 *  and have restricted session privileges to connect to it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRestricted;

/** Output only. Additional information about the current lifecycle state. */
@property(nonatomic, copy, nullable) NSString *lifecycleDetails;

/**
 *  Output only. The current state of the pluggable database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Available
 *        The pluggable database is available. (Value: "AVAILABLE")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_BackupInProgress
 *        The pluggable database is backing up. (Value: "BACKUP_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Disabled
 *        The pluggable database is disabled. (Value: "DISABLED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Failed
 *        The pluggable database is in a failed state. (Value: "FAILED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_PluggableDatabaseLifecycleStateUnspecified
 *        The lifecycle state is unspecified. (Value:
 *        "PLUGGABLE_DATABASE_LIFECYCLE_STATE_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Provisioning
 *        The pluggable database is provisioning. (Value: "PROVISIONING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Refreshing
 *        The pluggable database is refreshing. (Value: "REFRESHING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Relocated
 *        The pluggable database is relocated. (Value: "RELOCATED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Relocating
 *        The pluggable database is relocating. (Value: "RELOCATING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_RestoreFailed
 *        The pluggable database restore failed. (Value: "RESTORE_FAILED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_RestoreInProgress
 *        The pluggable database is restoring. (Value: "RESTORE_IN_PROGRESS")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Terminated
 *        The pluggable database is terminated. (Value: "TERMINATED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Terminating
 *        The pluggable database is terminating. (Value: "TERMINATING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_LifecycleState_Updating
 *        The pluggable database is updating. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *lifecycleState;

/** Output only. The OCID of the pluggable database. */
@property(nonatomic, copy, nullable) NSString *ocid;

/**
 *  Output only. The status of Operations Insights for this Database.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Disabling
 *        Operations Insights is disabling. (Value: "DISABLING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Enabled
 *        Operations Insights is enabled. (Value: "ENABLED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_Enabling
 *        Operations Insights is enabling. (Value: "ENABLING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_FailedDisabling
 *        Operations Insights failed to disable. (Value: "FAILED_DISABLING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_FailedEnabling
 *        Operations Insights failed to enable. (Value: "FAILED_ENABLING")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_NotEnabled
 *        Operations Insights is not enabled. (Value: "NOT_ENABLED")
 *    @arg @c kGTLROracleDatabase_PluggableDatabaseProperties_OperationsInsightsState_OperationsInsightsStateUnspecified
 *        The status is not specified. (Value:
 *        "OPERATIONS_INSIGHTS_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *operationsInsightsState;

/** Required. The database name. */
@property(nonatomic, copy, nullable) NSString *pdbName;

/** Optional. Pluggable Database Node Level Details */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_PluggableDatabaseNodeLevelDetails *> *pdbNodeLevelDetails;

@end


/**
 *  Optional. Defined tags for this resource. Each key is predefined and scoped
 *  to a namespace.
 *
 *  @note This class is documented as having more properties of
 *        GTLROracleDatabase_DefinedTagValue. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLROracleDatabase_PluggableDatabaseProperties_DefinedTags : GTLRObject
@end


/**
 *  Optional. Free-form tags for this resource. Each tag is a simple key-value
 *  pair with no predefined name, type, or namespace.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLROracleDatabase_PluggableDatabaseProperties_FreeformTags : GTLRObject
@end


/**
 *  The request for `ExadbVmCluster.RemoveVirtualMachine`.
 */
@interface GTLROracleDatabase_RemoveVirtualMachineExadbVmClusterRequest : GTLRObject

/**
 *  Required. The list of host names of db nodes to be removed from the
 *  ExadbVmCluster.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hostnames;

/**
 *  Optional. An optional ID to identify the request. This value is used to
 *  identify duplicate requests. If you make a request with the same request ID
 *  and the original request is still in progress or completed, the server
 *  ignores the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  The request for `AutonomousDatabase.Restart`.
 */
@interface GTLROracleDatabase_RestartAutonomousDatabaseRequest : GTLRObject
@end


/**
 *  The request for `AutonomousDatabase.Restore`.
 */
@interface GTLROracleDatabase_RestoreAutonomousDatabaseRequest : GTLRObject

/** Required. The time and date to restore the database to. */
@property(nonatomic, strong, nullable) GTLRDateTime *restoreTime;

@end


/**
 *  Details of scheduled operation.
 *  https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/ScheduledOperationDetails
 */
@interface GTLROracleDatabase_ScheduledOperationDetails : GTLRObject

/**
 *  Output only. Day of week.
 *
 *  Likely values:
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_DayOfWeekUnspecified
 *        The day of the week is unspecified. (Value: "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Friday
 *        Friday (Value: "FRIDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Monday
 *        Monday (Value: "MONDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Saturday
 *        Saturday (Value: "SATURDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Sunday
 *        Sunday (Value: "SUNDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Thursday
 *        Thursday (Value: "THURSDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Tuesday
 *        Tuesday (Value: "TUESDAY")
 *    @arg @c kGTLROracleDatabase_ScheduledOperationDetails_DayOfWeek_Wednesday
 *        Wednesday (Value: "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *dayOfWeek;

/** Output only. Auto start time. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeOfDay *startTime;

/** Output only. Auto stop time. */
@property(nonatomic, strong, nullable) GTLROracleDatabase_TimeOfDay *stopTime;

@end


/**
 *  The source configuration for the standby Autonomous Database.
 */
@interface GTLROracleDatabase_SourceConfig : GTLRObject

/**
 *  Optional. This field specifies if the replication of automatic backups is
 *  enabled when creating a Data Guard.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *automaticBackupsReplicationEnabled;

/**
 *  Optional. The name of the primary Autonomous Database that is used to create
 *  a Peer Autonomous Database from a source.
 */
@property(nonatomic, copy, nullable) NSString *autonomousDatabase;

@end


/**
 *  The request for `AutonomousDatabase.Start`.
 */
@interface GTLROracleDatabase_StartAutonomousDatabaseRequest : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLROracleDatabase_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLROracleDatabase_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLROracleDatabase_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLROracleDatabase_Status_Details_Item : GTLRObject
@end


/**
 *  The request for `AutonomousDatabase.Stop`.
 */
@interface GTLROracleDatabase_StopAutonomousDatabaseRequest : GTLRObject
@end


/**
 *  The initial storage size, in gigabytes, that is applicable for virtual
 *  machine DBSystem.
 */
@interface GTLROracleDatabase_StorageSizeDetails : GTLRObject

/**
 *  Output only. The data storage size, in gigabytes, that is applicable for
 *  virtual machine DBSystem.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataStorageSizeInGbs;

/**
 *  Output only. The RECO/REDO storage size, in gigabytes, that is applicable
 *  for virtual machine DBSystem.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recoStorageSizeInGbs;

@end


/**
 *  The request for `OracleDatabase.SwitchoverAutonomousDatabase`.
 */
@interface GTLROracleDatabase_SwitchoverAutonomousDatabaseRequest : GTLRObject

/** Required. The peer database name to switch over to. */
@property(nonatomic, copy, nullable) NSString *peerAutonomousDatabase;

@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLROracleDatabase_TimeOfDay : GTLRObject

/**
 *  Hours of a day in 24 hour format. Must be greater than or equal to 0 and
 *  typically must be less than or equal to 23. An API may choose to allow the
 *  value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of an hour. Must be greater than or equal to 0 and less than or
 *  equal to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds, in nanoseconds. Must be greater than or equal to 0 and
 *  less than or equal to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of a minute. Must be greater than or equal to 0 and typically must
 *  be less than or equal to 59. An API may allow the value 60 if it allows
 *  leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Represents a time zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones).
 */
@interface GTLROracleDatabase_TimeZone : GTLRObject

/**
 *  IANA Time Zone Database time zone. For example "America/New_York".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. IANA Time Zone Database version number. For example "2019a". */
@property(nonatomic, copy, nullable) NSString *version;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
